@model IEnumerable<TMS.Models.PropertyTitle>
@using TMS.Models

@{
    ViewBag.Title = "Mailo Property";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>

    function NoParentTitle(args) {
        //debugger;
        //alert(args.value);
        //var checked = args.value;

        var checked = $("#Verified:checked").val();

        if (checked == "on") {
            $("#Title_Reference").attr('readonly', 'readonly');
            $("#Title_Reference").val("No Title");

        }

        else {
            $("#Title_Reference").removeAttr('readonly', 'readonly');
            $("#Title_Reference").val("");
        }

    }
</script>

<br />
<div class="row">
    <div class="col-lg-12">
        <ol class="breadcrumb">
            <li class="lead">
                <strong>Add Mailo Property Titles</strong>
            </li>
        </ol>
    </div>
</div>

@*<p class="lead"><strong>Add Mailo Property Titles</strong></p>*@

@(Html.EJ().Grid<PropertyTitle>("Grid")
                                                        //.Datasource(datasource => datasource.URL("DataSourceMailo").UpdateURL(" DialogUpdate").InsertURL("DialogInsert").RemoveURL("PropertyTitles/DialogDelete").Adaptor(AdaptorType.UrlAdaptor))

                                                        .Datasource(datasource => datasource.URL("DataSourceMailoStatus")/*.UpdateURL("DialogUpdate").InsertURL("DialogInsert")*/.RemoveURL("PropertyTitles/DialogDelete").Adaptor(AdaptorType.UrlAdaptor))

                                                        .IsResponsive()

                                                         .AllowPaging()    /*Paging Enabled*/
                                                                 .EditSettings(edit => { edit.AllowAdding().AllowEditing().EditMode(EditMode.DialogTemplate).DialogEditorTemplateID("#template"); })

                                                                 .ContextMenuSettings(contextMenu =>
                                                                 {
                                                                     contextMenu.EnableContextMenu();
                                                                 })
                                                        .AllowPaging()
                                                         .PageSettings(page => page.PageSize(10))
                                                         .ShowColumnChooser()
                                                        .AllowGrouping()
                                                        //.GroupSettings(group => group.GroupedColumns(col => col.Add("DistrictID")))
                                                        .AllowFiltering()
                                                        .AllowSearching()
                                                          .AllowScrolling().AllowResizing()
                                                               .ScrollSettings(col => { col.Width("100%"); }).ShowColumnChooser()

                                                        .FilterSettings(d => d.FilterType(FilterType.Excel))
                                                              .ToolbarSettings(toolbar =>
                                                              {
                                                                  toolbar.ShowToolbar().ToolbarItems(items =>
                                                                  {
                                                                      items.AddTool(ToolBarItems.Add);
                                                                      items.AddTool(ToolBarItems.Edit);
                                                          // items.AddTool(ToolBarItems.Delete);
                                                          items.AddTool(ToolBarItems.Update);
                                                                      items.AddTool(ToolBarItems.Cancel);
                                                                      items.AddTool(ToolBarItems.Search);
                                                                  });
                                                              })
                                                        .Columns(col =>
                                                        {

                                                            col.Field("Location_id").IsPrimaryKey(true).HeaderText("Location").ForeignKeyField("Location_id").ForeignKeyValue("Location_Desc").DataSource((IEnumerable<object>)ViewBag.Locations).Width(120).Add();
                                                            col.Field("Project_Code").HeaderText("Project Code").ForeignKeyField("Project_id").ForeignKeyValue("Project_Desc").DataSource((IEnumerable<object>)ViewBag.Projects).Width(150).Add();

                                                            col.Field("Title_Reference").HeaderText("Title Ref.").Width(180).Add();

                                                //col.Field("Volume").IsPrimaryKey(true).HeaderText("Volume").Width(100)/*.ValidationRules(rule => rule.AddRule("required", true).AddRule("number", true))*/.Width(120).Add();
                                                //col.Field("Folio").IsPrimaryKey(true).HeaderText("Folio")/*.ValidationRules(rule => rule.AddRule("required", true).AddRule("numer", true))*/.Width(120).Width(100).Add();

                                                col.Field("TypeCode").HeaderText("Property Type").ForeignKeyField("TypeCode").ForeignKeyValue("TypeDesc").DataSource((IEnumerable<object>)ViewBag.propertyTypes).Width(180).Add();
                                                            col.Field("LandTypeCode").HeaderText("Lease Type").ForeignKeyField("LandTypeCode").ForeignKeyValue("LandDesc").DataSource((IEnumerable<object>)ViewBag.Lease_Type).Width(150).Add();

                                                            col.Field("Block_No").HeaderText("Block No").Width(180).Add();

                                                            col.Field("DistrictID").HeaderText("District").ForeignKeyField("DistrictID").ForeignKeyValue("District_Name").DataSource((IEnumerable<object>)ViewBag.Districts).Width(150).Add();
                                                            col.Field("County_ID").HeaderText("County").ForeignKeyField("County_ID").ForeignKeyValue("County_Name").DataSource((IEnumerable<object>)ViewBag.Counties).Width(150).Add();
                                                            col.Field("Subcounty_ID").HeaderText("Subcounty").ForeignKeyField("Subcounty_ID").ForeignKeyValue("Subcounty_Name").DataSource((IEnumerable<object>)ViewBag.Subcounties).Width(150).Add();

                                                            col.Field("ActualPlotSize").IsPrimaryKey(true).HeaderText("Actual Plot Size");

                                                //col.Field("ActualPlotSize").IsPrimaryKey(true).HeaderText("Actual Plot Size");


                                                col.Field("PlotSize_ID").HeaderText("Plot Size Units").ForeignKeyField("PlotSize_ID").ForeignKeyValue("PlotSize_Desc").DataSource((IEnumerable<object>)ViewBag.PropertyTitle_PlotSizes).Width(150).Add();

                                                            col.Field("TitleMovementStatusID").HeaderText("Title Status").ForeignKeyField("Status_ID").ForeignKeyValue("Status_Description").DataSource((IEnumerable<object>)ViewBag.PropertyTitlePaymentStatus).Width(220).Add();
                                                //col.Field("Added_By").HeaderText("Added_By").Width(200).Add();

                                                //col.Field("Town_Village").HeaderText("Town/Village").Width(280).Add();
                                                //col.Field("Directors").HeaderText("Directors").IsPrimaryKey(false).Visible(true).TextAlign(TextAlign.Justify).Width(100).Add();

                                            })
                                                     //.ClientSideEvents(eve => { /*eve.Load("onLoad");*/ eve.ActionComplete("edit"); }))
                                                     .ClientSideEvents(eve => {/* eve.ActionBegin("onActionBegin");*/ eve.ActionComplete("edit").ActionBegin("onActionBegin"); }))



<script>

    function onActionBegin(args) {

        if (args.requestType == "save") {
            //alert($("#Directors").val());
            args.data["Directors"] = $("#Directors").val();
        }
    }

    function NoParentTitle(args) {
        //debugger;
        //alert(args.value);
        //var checked = args.value;

        var checked = $("#Verified:checked").val();

        if (checked == "on") {
            $("#Title_Reference").attr('readonly', 'readonly');
            $("#Title_Reference").val("No Title");

        }

        //else
        //    $("#Title_Reference").removeAttr('readonly', 'readonly');

        else {
            $("#Title_Reference").removeAttr('readonly', 'readonly');
            $("#Title_Reference").val("");
        }

    }
</script>

<script type="text/template" id="template">
    <b>Mailo Property Title Details</b>
    <div id="defaultTab">
        <ul>
            <li><a href="#tab1">Mailo Property Title Details</a></li>
            @*<li><a href="#tab2">Details (Page #2)</a></li>
                <li><a href="#tabboardmembers">Board Members</a></li>*@
        </ul>

        <table> <tr><td><strong>Fields marked with Asterisk(<strong><color:red>*</color:red></strong>) are required</strong> </td> </tr></table>

        <div id="tab1">
            <table cellspacing="10">

                <tr>

                    <td style="text-align: right;" hidden="hidden">
                        Volume *
                    </td>

                    <td style="text-align: left" hidden="hidden">
                        @*<input id="Volume" name="Volume" value="{{: Volume}}" required="required" disabled="disabled" class="e-field e-ejinputtext valid e-disable"*@
                        <input id="Volume" name="Volume" value="{{: Volume}}" disabled="disabled" class="e-field e-ejinputtext valid e-disable"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;" hidden="hidden">
                        Folio *
                    </td>

                    <td style="text-align: left" hidden="hidden">
                        @*<input id="Folio" name="Folio" value="{{: Folio}}" required="required" disabled="disabled" class="e-field e-ejinputtext valid e-disable"*@
                        <input id="Folio" name="Folio" value="{{: Folio}}" disabled="disabled" class="e-field e-ejinputtext valid e-disable "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                </tr>

                <tr>
                    <td style="text-align: right;">
                        Location *
                    </td>
                    <td style="text-align: left">

                        <input id="Location_id" name="Location_id" value="{{:Location_id}}" disabled="disabled" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" e-disable />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Project Code
                    </td>
                    <td style="text-align: left">
                        <input id="Project_Code" name="Project_Code" value="{{: Project_Code}}" disabled="disabled" class="e-field e-ejinputtext valid e-disable "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Parent Title *
                    </td>

                    <td style="text-align: left">
                        @*<input id="Title_Reference" name="Title_Reference" value="{{:Title_Reference}}" required="required" disabled="disabled" class="e-field e-ejinputtext valid e-disable"*@
                        <input id="Title_Reference" name="Title_Reference" value="{{:Title_Reference}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>
                </tr>
                <tr>

                    <td style="text-align: right;">
                        No Parent Title?
                    </td>

                    <td style="text-align: left">

                        {{if Verified}}
                        <input id="Verified" onchange="NoParentTitle()" class="checkbox" name="Verified" type="checkbox" checked />
                        {{else}}
                        <input id="Verified" onchange="NoParentTitle()" class="checkbox" name="Verified" type="checkbox" />
                        {{/if}}

                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Lease Type
                    </td>
                    <td style="text-align: left">
                        <input id="LandTypeCode" name="LandTypeCode" value="{{: LandTypeCode}}" disabled="disabled" class="e-field e-ejinputtext valid e-disable"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Property Type
                    </td>
                    <td style="text-align: left">

                        <input id="TypeCode" name="TypeCode" value="{{:TypeCode}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />

                    </td>

                </tr>
                <tr>


                    <td style="text-align: right;">
                        Unit Number
                    </td>
                    <td style="text-align: left">
                        <input id="Unit_No" name="Unit_No" value="{{:Unit_No}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Block Number
                    </td>
                    <td style="text-align: left">
                        <input id="Block_No" name="Block_No" value="{{:Block_No}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Flat Number
                    </td>
                    <td style="text-align: left">
                        <input id="Flat_N0" name="Flat_N0" value="{{:Flat_N0}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                </tr>

                <tr>

                    <td style="text-align: right;">
                        Plan Number
                    </td>
                    <td style="text-align: left">
                        <input id="Plan_No" name="Plan_No" value="{{:Plan_No}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Floor Area Leased
                    </td>
                    <td style="text-align: left">
                        <input id="FloorAreaLeased" name="FloorAreaLeased" value="{{:FloorAreaLeased}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Plot Number
                    </td>
                    <td style="text-align: left">
                        <input id="Plot_No" name="Plot_No" value="{{:Plot_No}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                </tr>

                <tr>

                    <td style="text-align: right;">
                        District
                    </td>
                    <td style="text-align: left">

                        <input id="DistrictID" name="DistrictID" value="{{: DistrictID}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />

                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        County
                    </td>
                    <td style="text-align: left">
                        <input id="County_ID" name="County_ID" value="{{: County_ID}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Subcounty
                    </td>
                    <td style="text-align: left">
                        <input id="Subcounty_ID" name="Subcounty_ID" value="{{: Subcounty_ID}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                </tr>
                <tr>

                    <td style="text-align: right;">
                        Area of Unit
                    </td>
                    <td style="text-align: left">
                        <input id="AreaOfUnit" name="AreaOfUnit" value="{{:AreaOfUnit}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Unit Factor
                    </td>
                    <td style="text-align: left">
                        <input id="UnitFactor" name="UnitFactor" value="{{: UnitFactor}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Proprietor's Address
                    </td>

                    <td>
                        <textarea rows="4" cols="120" id="ProprietorAddress" name="ProprietorAddress" class="form-control" style="text-align:left;">{{:ProprietorAddress}}</textarea>
                    </td>

                </tr>

                <tr>
                    <td style="text-align: right;">
                        Board Minute Release
                    </td>

                    <td>
                        <textarea rows="4" cols="120" id="BoardMinuteRelease" name="BoardMinuteRelease" class="form-control" style="text-align:left;">{{:BoardMinuteRelease}}</textarea>
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Sold or Transferred?
                    </td>

                    <td style="text-align: left">
                        {{if PropertySoldorTransferred}}
                        <input type="checkbox" id="PropertySoldorTransferred" name="PropertySoldorTransferred" checked="checked" class="e-field e-checkbox" style="width:30px" />
                        {{else}}
                        <input type="checkbox" id="PropertySoldorTransferred" name="PropertySoldorTransferred" class="e-field e-checkbox" style="width:30px" />
                        {{/if}}
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Plot Size
                    </td>
                    <td style="text-align: left">

                        <input id="ActualPlotSize" name="ActualPlotSize" value="{{: ActualPlotSize}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />

                    </td>

                </tr>

                <tr>

                    <td style="text-align: right;">
                        Plot Size (Units)
                    </td>
                    <td style="text-align: left">

                        <input id="PlotSize_ID" name="PlotSize_ID" value="{{: PlotSize_ID}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />

                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Value of Property
                    </td>
                    <td style="text-align: left">
                        <input id="ValueOfProperty" name="ValueOfProperty" value="{{: ValueOfProperty}}" class="e-field e-ejinputtext valid "
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        Valuer
                    </td>

                    <td>
                        <textarea rows="4" cols="120" id="Valuer" name="Valuer" class="form-control" style="text-align:left;">{{:Valuer}}</textarea>
                    </td>

                </tr>
                <tr>
                    <td style="text-align: right;">
                        Longitude
                    </td>
                    <td style="text-align: left">
                        <input id="Longitude" name="Longitude" value="{{:Longitude}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>
                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>
                    <td style="text-align: right;">
                        Latitude
                    </td>
                    <td style="text-align: left">
                        <input id="Latitude" name="Latitude" value="{{:Latitude}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>
                    
                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>
                    <td style="text-align: right;">
                        Date of Valuation
                    </td>
                    <td style="text-align: left">                        
                        <input id="DateOfValuation" name="DateOfValuation" value="{{: DateOfValuation}}" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>
                </tr>
                <tr>
                    <td id="upltitle" style="text-align: left;">Upload Title</td>
                    <td id="uplbutt" colspan="1">
                        <div class="posupload">
                            <div id="UploadInput"></div>
                        </div>
                        <ul id="uploaded"></ul>
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;">
                        General Remarks
                    </td>

                    <td>
                        <textarea rows="4" cols="120" id="GeneralRemarks" name="GeneralRemarks" class="form-control" style="text-align:left;">{{:GeneralRemarks}}</textarea>
                    </td>
                </tr>
                <tr>
                    <td style="text-align: right;" hidden>
                        Added By
                    </td>

                    <td style="text-align: left">
                        <input id="Added_By" name="Added_By" value="{{:Added_By}}" disabled="disabled" hidden="hidden" class="e-field e-ejinputtext valid e-disable"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>

                    <td style="text-align: right;"></td>
                    <td colspan="1" style="text-align: justify"></td>

                    <td style="text-align: right;" hidden>
                        Added Date
                    </td>
                    <td style="text-align: left" hidden>
                        <input id="Added_Date" name="Added_Date" value="{{:Added_Date}}" disabled="disabled" class="e-field e-ejinputtext valid"
                               style="text-align: right; width: 150px; height: 25px" />
                    </td>
                </tr>
                @*Initial Code ends here*@
            </table>
        </div>
        <div class="row">
            <div class="col col-md-12" id="UploadTitles">
                <p style="background-color:darkorange; text-align:center; color:white; font-size:15px; width:100%; padding:10px;">Uploaded Titles</p>
            </div>
            <div class="col col-md-12">
                <div id="EvidenceGrid" />
            </div>
            <div class="col col-md-12" style="margin-bottom:10px; margin-top:10px;" hidden="hidden">
                <div id="uploadbox" style="width: 100%;"></div>
            </div>
            <div class="col col-md-12" style="margin-bottom:10px; margin-top:10px;" hidden="hidden">
                <div id="partialPlaceHolder" style="width:100%"> </div>
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">

    function edit(args) {
        $("#Longitude").ejNumericTextbox({
            decimalPlaces: 10
        });
        $("#Latitude").ejNumericTextbox({
            decimalPlaces: 10
        });   
        $("#Offer_Value").ejNumericTextbox();
        $("#Ground_Rent").ejNumericTextbox();
        $("#Lease_Start_Date").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });

        $("#Lease_End_Date").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });

        $("#Added_Date").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });
        $("#Ground_Rent").ejNumericTextbox();
        $("#Rates").ejNumericTextbox();

        $("#OfferDate").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });

        $("#OfferExpiryDate").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });

        $("#OfferPaymentDate").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });
        $("#TransferDate").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });
        $("#RegDate").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });
        $("#DateOfValuation").ejDatePicker({
            dateFormat: "dd/MMMM /yyyy"
        });

        $("#Folio").ejNumericTextbox();

         var DropDownListDirectors = $('#Directors').ejDropDownList({
            dataSource: @Html.Raw(Json.Encode(ViewBag.Directors)) ,
            width: "280px",
            fields: { value: "Employee_Name", text: "Employee_Name" }, showCheckbox: true,
        }).data("ejDropDownList");

        var DropDownListPlotSize = $('#PlotSize_ID').ejDropDownList({
            dataSource:  @Html.Raw(Json.Encode(ViewBag.PropertyTitle_PlotSizes)),
            width: "280px",
            fields: { value: "PlotSize_ID", text: "PlotSize_Desc" }
        }).data("ejDropDownList");


        var DropDownListObj = $('#TypeCode').ejDropDownList({
            dataSource: @Html.Raw(Json.Encode(ViewBag.propertyTypes)),
            width: "280px",
            fields: { id: "TypeCode", text: "TypeDesc", value: "TypeCode" }
        }).data("ejDropDownList");

        @*var DropDownListLease_Type = $('#LandTypeCode').ejDropDownList({
            dataSource:  @Html.Raw(Json.Encode(ViewBag.Lease_Type)),
            width: "280px",
            fields: { id: "LandTypeCode", text: "LandDesc", value: "LandTypeCode" }
        }).data("ejDropDownList");*@

        $.ajax({
            //url: 'HAT/Districts',
            url: 'GetMailoData',
            //data: JSON.stringify(mid),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            type: 'GET',
            success: function (data) {
                if (data.length > 0) {
                    var DropDownListDist = $('#LandTypeCode').ejDropDownList({
                        dataSource: data,
                        width: "280px",
                        fields: { id: "LandTypeCode", text: "LandDesc", value: "LandTypeCode" }, readOnly: true
                    }).data("ejDropDownList");
                    var ddl2 = $('#LandTypeCode').ejDropDownList("instance");
                    var fc = data[0].LandTypeCode;
                    //console.log(JSON.stringify(fc));
                    ddl2.selectItemByValue(fc);
                }

            },

        });


        var DropDownListPlotSizeEmployeeName = $('#Employee_ID').ejDropDownList({
            dataSource:  @Html.Raw(Json.Encode(ViewBag.A_Employee)),
            width: "280px",
            fields: { value: "Employee_ID", text: "Employee_Name" }
        }).data("ejDropDownList");


        var DropDownListEmployeeName = $('#Employee_ID').ejDropDownList({
            dataSource:  @Html.Raw(Json.Encode(ViewBag.A_Employee)),
            width: "280px",
            fields: { value: "Employee_ID", text: "Employee_Name" }
        }).data("ejDropDownList");


        var DropDownListPosition = $('#Position_ID').ejDropDownList({
            dataSource:  @Html.Raw(Json.Encode(ViewBag.A_Position)),
            width: "280px",
            fields: { value: "Position_ID", text: "Position_Description" }
        }).data("ejDropDownList");

          var datadistricts = @Html.Raw(Json.Encode(ViewBag.Districts));
        $('#DistrictID').ejDropDownList({
            dataSource: datadistricts,
            @*dataSource: @Html.Raw(Json.Encode(ViewBag.Districts)),*@
            width: "280px",
            fields: { id: "DistrictID", text: "District_Name", value: "DistrictID" },
            change: ProjectChange,// Add this change function into the if statement
        }).data("ejDropDownList");

         @*var DropDownListProjectCode = $('#Project_Code').ejDropDownList({
            dataSource: @Html.Raw(Json.Encode(ViewBag.projects)) ,
            width: "280px",
            fields: { id: "Project_id", value: "Project_id", text: "Project_Desc" }
        }).data("ejDropDownList");*@

         var DropDownListLocations = $('#Location_id').ejDropDownList({
            dataSource: @Html.Raw(Json.Encode(ViewBag.Locations)) ,
            width: "280px",
             fields: { id: "Location_id", value: "Location_id", text: "Location_Desc" },
            change: LocationChange,// Add this change function into the if statement
        }).data("ejDropDownList");

        $("#defaultTab").ejTab({ selectedItemIndex: 0, cssClass: "fat-lime" });
        $("#defaultTab").ejTab({ hiddenItemIndex: [1] });

        if (args.requestType == "beginedit" || args.requestType == "add") {
            open();
            window._requestType = args.requestType;

            var _Title_Reference = $('#Title_Reference').val();
            var _Volume = $('#Volume').val();
            var _Folio = $('#Folio').val();

            if ((_Title_Reference == null || _Title_Reference == "") ||
                (_Volume == null || _Volume == "") ||
                (_Folio == null || _Folio == "")) {
                $('#UploadTitles').hide();
                $('#EvidenceGrid').hide();
            }
            else {
                $('#UploadTitles').show();
                $('#EvidenceGrid').show();
            }

            $($("#EditDialog_Grid_Save").hide()).after('<button id="save" type="button" onclick="savess();" class="btn btn-success btn-sm" > <span class="glyphicon glyphicon-save"></span> Save</button>');
            $("#save").css({ "width": "100px", "height": "50px", "font-size": "17px", "margin-left": "190px" });
            $("#EditDialog_Grid_Cancel").ejButton("destroy");
            $($("#EditDialog_Grid_Cancel").hide()).after(' <button type="button" id="cancel" onclick="cancelss()" class="btn btn-danger btn-sm" ><span class="glyphicon glyphicon-remove-circle"></span> Cancel</button>');
            $("#cancel").css({ "width": "100px", "height": "50px", "font-size": "17px", "margin-left": "10px" })

            $("#defaultTab").ejTab({ selectedItemIndex: 0, cssClass: "fat-lime" });
            $("#defaultTab").ejTab({ hiddenItemIndex: [1] });
          //  $("#defaultTab").ejTab({ hiddenItemIndex: [2] });

            //Pick Title Reference,Volume and Folio on Load of the Form
            window.titref = $('#Title_Reference').val().trim();
            window.vol = $('#Volume').val();
            window.fol = $('#Folio').val();

            //Uploading Input
            $('#UploadInput').ejUploadbox({
                saveUrl: "SaveScan?Title_Reference=" + titref + "&&Volume=" + window.Volume + "&&Folio=" + window.Folio,                
                //saveUrl: "SaveScan",
                dialogAction: { closeOnComplete: true },
                multipleFilesSelection: true,
                showFileDetails: false/*true*/,
                begin: "Filebegin",
                success: function (args) {
                    var grid = $("#EvidenceGrid").ejGrid("instance");
                    grid.refreshContent(true);
                    grid.endEdit();
                    $("#ListFiles").append('<tr><td>' + args.files.name + " has been uploaded successfully" + '</td></tr>');
                },
                removeUrl: "Remove",
                fileSelect: "fileselect",
                autoUpload: false,
                cssClass: "gradient-purple",
                buttonText: { browse: "Choose File", upload: "Upload File", cancel: "Cancel Upload" },
            });
            LoadEvidence();

            if (args.requestType == "add") {

                var DropDownListProjectCode = $('#Project_Code').ejDropDownList({
                    @* dataSource: @Html.Raw(Json.Encode(ViewBag.projects)) ,*@
                dataSource: null,
                    width: "280px",
                        fields: { id: "Project_id", value: "Project_id", text: "Project_Desc" }
            }).data("ejDropDownList");


                var counties = @Html.Raw(Json.Encode(ViewBag.Counties));
                $('#County_ID').ejDropDownList({
                   // dataSource: counties,
                    dataSource: null,
                    width: "280px",
                    fields: { value: "County_ID", text: "County_Name" }
                }).data("ejDropDownList");

                  var Subcounties = @Html.Raw(Json.Encode(ViewBag.Subcounties));
                $('#Subcounty_ID').ejDropDownList({
                   // dataSource: Subcounties,
                    dataSource: null,
                    width: "280px",
                    fields: { value: "Subcounty_ID", text: "Subcounty_Name" }
                }).data("ejDropDownList");

                //Auto Incrementing the Folio

                $.ajax({
                    url: "CheckMailoFolioConcat",
                    type: "Get",
                    dataType: "json",
                    success: function (data) {
                        // alert(data);
                        var foliomailosave = (data);
                        $('#Folio').val(foliomailosave);
                        //cancelss();
                    }
                });

                //Auto Fill the Volume
                $.ajax({
                    url: "CheckMailoVolume",
                    type: "Get",
                    dataType: "json",
                    success: function (data) {
                        // alert(data);
                        var volume = (data);
                        $('#Volume').val(volume);
                        //cancelss();
                    }
                });
            }

            if (args.requestType == "beginedit")
            {

                 var counties = @Html.Raw(Json.Encode(ViewBag.Counties));
                $('#County_ID').ejDropDownList({
                    dataSource: counties,
                    width: "280px",
                    fields: { value: "County_ID", text: "County_Name" }
                }).data("ejDropDownList");

                  var Subcounties = @Html.Raw(Json.Encode(ViewBag.Subcounties));
                $('#Subcounty_ID').ejDropDownList({
                    dataSource: Subcounties,
                    width: "280px",
                    fields: { value: "Subcounty_ID", text: "Subcounty_Name" }
                }).data("ejDropDownList");

                 var DropDownListProjectCode = $('#Project_Code').ejDropDownList({
                     dataSource: @Html.Raw(Json.Encode(ViewBag.projects)) ,
                width: "280px",
                    fields: { id: "Project_id", value: "Project_id", text: "Project_Desc" }
                }).data("ejDropDownList");


                var tabObj = $("#defaultTab").data("ejTab");
                hdn = tabObj.option("hiddenItemIndex");
                var i = 1;
                var j = hdn.indexOf(i);
                var val = hdn.slice(0, j);
                tabObj.option("hiddenItemIndex", val);
                tabObj.showItem(i);
                $("#defaultTab").ejTab({ selectedItemIndex: 0 });

               $("#defaultTab").ejTab({ heightAdjustMode: "auto", height: "250px" });
                //$("#defaultTab").ejTab({ height: "400px" });

                var templateHeader = this.getSelectedRecords()[0].Project_Code + ' ' + this.getSelectedRecords()[0].Volume + ' ' + this.getSelectedRecords()[0].ProprietorName;
                projectcode = this.getSelectedRecords()[0].Project_Code;
                folio = this.getSelectedRecords()[0].Folio;
                volume = this.getSelectedRecords()[0].Volume;

                var dataManager = ej.DataManager("TitleMovts?projcode=" + projectcode + "&&Folio=" + folio + "&&Volume=" + volume);

                $("#GridTitMovt").ejGrid({
                    dataSource:
                    ej.DataManager({
                        url: "TitleMovts?projcode=" + projectcode + "&&Folio=" + folio + "&&Volume=" + volume,
                        updateUrl: "DialogUpdateMovt?Project_Code=" + projectcode + "&&Folio=" + folio + "&&Volume=" + volume,
                        insertUrl: "DialogInsertMovt?Project_Code=" + projectcode + "&&Folio=" + folio + "&&Volume=" + volume,
                        removeUrl: "DialogDeleteMovt?Project_Code=" + projectcode + "&&Folio=" + folio + "&&Volume=" + volume,
                        adaptor: "UrlAdaptor"
                    }),
                    toolbarSettings: {
                        showToolbar: true,
                        toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                    },
                    editSettings: {
                        allowEditing: true,
                        allowAdding: true,
                        allowDeleting: true,
                        editMode: "dialogtemplate",
                        dialogEditorTemplateID: "#movttemplate"
                    },
                    allowPaging: true,
                    columns: [
                        { field: "Project_Code", isPrimaryKey: true, type: "number", visible: false@*,foreignKeyField: "Project_Code", foreignKeyValue: "Project_Desc", dataSource: @Html.Raw(Json.Encode(ViewBag.projects))*@ },
                        { field: "Movt_Serial_No", isPrimaryKey: true, visible: false },
                        { field: "Folio", isPrimaryKey: true, visible: false, type: "number"},
                        { field: "Volume"/*, isPrimaryKey: true, visible: false */},
                        { field: "Title_Reference", visible: false },
                        { field: "Movement_Date", headerText: "Movement Date", width: "10%", editType: "datepicker", format: "{0:MM/dd/yyyy}", editParams: { buttonText: "Now" } },
                        { field: "Dest_Category", headerText: "Destination Category",  foreignKeyField: "DestinyCode", foreignKeyValue: "DestinyDesc", dataSource: @Html.Raw(Json.Encode(ViewBag.destinationTypes))  },
                        { field: "Destination_Address", headerText: "Address" },
                        { field: "PlotNo", headerText: "Plot No"},
                        { field: "Lawyers_ID", headerText: "Lawyer", foreignKeyField: "Lawyers_ID", foreignKeyValue: "Lawyers_Desc", dataSource: @Html.Raw(Json.Encode(ViewBag.lawyers)) },//
                        { field: "Purpose_ID", headerText: "Purpose",foreignKeyField: "Purpose_ID", foreignKeyValue: "Purpose_Description", dataSource: @Html.Raw(Json.Encode(ViewBag.movementPurposes))  },
                    ],
                    actionComplete: "complete"
                });
            }

            $('#' + this._id + '_dialogEdit').ejDialog("option", "title", "Mailo Property Title"); //change dialog title

        }
    }

</script>


<script>

    function ProjectChange(args) {

        var _value = args.value;
        //alert("Value is: "+_value);

        $.ajax({  // Ajax function to grey out County before selecting project code
            url: 'GetCounty',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { "District_ID": _value },
            type: 'GET',
            success: function (data) {
                if (data.length > 0) {
                    //    alert("You are into District");

                    var DropDownListCounty = $('#County_ID').ejDropDownList({
                        dataSource: data,
                        fields: { value: "County_ID", text: "County_Name" },
                        width: "280px",
                        change: SubcountyChange,
                    }).data("ejDropDownList");
                }
            },
        });


    }

    function SubcountyChange(args) {
        var _value = args.value;
        //  alert( _value);

        $.ajax({  // Ajax function to grey out Subcounty before selecting project code
            url: 'GetSubCounty',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { "County_ID": _value },
            type: 'GET',
            success: function (data) {
                if (data.length > 0) {
                    //     alert("You are into SubCounty");

                    var DropDownListSubCounties = $('#Subcounty_ID').ejDropDownList({
                        dataSource: data,
                        width: "280px",
                        fields: { value: "Subcounty_ID", text: "Subcounty_Name" }
                    }).data("ejDropDownList");


                }
            },
        });
    }

    function LocationChange(args) {

        var _value = args.value;
        //alert("Value is: "+_value);

        $.ajax({  // Ajax function to grey out County before selecting District
            url: 'GetProjectCode',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { "Location_id": _value },
            type: 'GET',
            success: function (data) {
                if (data.length > 0) {
                    //alert("You are into District");

                    var DropDownListProjects = $('#Project_Code').ejDropDownList({
                        dataSource: data,
                        //fields: { value: "County_ID", text: "County_Name" },
                        fields: { id: "Project_id", text: "Project_Desc", value: "Project_id" },
                        width: "280px",
                        // change: SubcountyChange,
                    }).data("ejDropDownList");
                }
            },
        });


    }

    function cancelss() {
        var grid = $("#Grid").ejGrid("instance");
        grid.endEdit();
        grid.refresh;
        //grid.refresh();

    }

    function onLoad(args) {
        this.model.dataSource.adaptor = new ej.ForeignKeyAdaptor(foreignObj, "remoteSaveAdaptor");
    }
</script>

<script>
    function savess() {

        var _Location = $("#Location_id").data("ejDropDownList");
        var Location = _Location.option("value");
        var _Title_Reference = $('#Title_Reference').val();
        var _NoParentTitle = $("#Verified").is(":checked");
        //   alert("NoParentTitle is" + _NoParentTitle)
        var _LandTypeCode = $("#LandTypeCode").data("ejDropDownList");
        var LandTypeCodee = _LandTypeCode.option("value");
        var _Volume = $("#Volume").val();
        //alert("Volume is" + _Volume)

        var _Folio = $("#Folio").val();
        //alert("Folio is" + _Folio)

        var _TypeCode = $("#TypeCode").data("ejDropDownList");
        var TypeCodee = _TypeCode.option("value");
        var _Unit_No = $("#Unit_No").val();
        var _Block_No = $("#Block_No").val();
        var _Flat_N0 = $("#Flat_N0 ").val();
        var _Plan_No = $("#Plan_No").val();
        var _Plot_No = $("#Plot_No").val();
        var _DistrictID = $("#DistrictID").data("ejDropDownList");
        var DistrictIDD = _DistrictID.option("value");
        var _County = $("#County_ID").data("ejDropDownList");
        var County = _County.option("value");
        var _Subcounty = $("#Subcounty_ID").data("ejDropDownList");
        var Subcounty = _Subcounty.option("value");

        var _Project_Code = $("#Project_Code").data("ejDropDownList");
        var ProjectCode = _Project_Code.option("value");

        var _AreaOfUnit = $('#AreaOfUnit').val();
        var _UnitFactor = $("#UnitFactor").val();
        var _ProprietorAddress = $("#ProprietorAddress").val();
        var _BoardMinuteRelease = $("#BoardMinuteRelease").val();
        var _PropertySoldorTransferred = $("#PropertySoldorTransferred").is(":checked");
        var _PlotSize = $("#ActualPlotSize").val();
        var _PlotSizeUnits = $("#PlotSize_ID").data("ejDropDownList");
        var PlotSizeUnits = _PlotSizeUnits.option("value");
        var _ValueOfProperty = $("#ValueOfProperty").val();
        var _Valuer = $("#Valuer").val();
        var _DateOfValuation = $("#DateOfValuation").data("ejDatePicker");
        var DateOfValuationn = _DateOfValuation.getValue();
        var _GeneralRemarks = $("#GeneralRemarks").val();
        var _FloorAreaLeased = $('#FloorAreaLeased').val();
        var _Longitude = $('#Longitude').val();
        var _Latitude = $('#Latitude').val();
        //alert("FloorAreaLeased is" + _FloorAreaLeased)

        ;

        if ((Location == null || Location == "") && (_Volume == null || _Volume == "")
            && (_Folio == null || _Folio == "") && (_Title_Reference == null || _Title_Reference == "")) {
            alert("Fields marked with asterisk (*) are required!");
            return false;
        }

        if ((Location == null || Location == "") && (_Title_Reference == null || _Title_Reference == "")) {
            alert("Location and Parent Title are required fields!");
            return false;
        }

        else if ((_Title_Reference == null || _Title_Reference == "")) {
            alert("Parent Title is required!");
            return false;
        }

        else if ((Location == null || Location == "")) {
            alert("Location is required!");
            return false;
        }

        else if ((_Volume == null || _Volume == "")) {
            alert("Volume is required!");
            return false;
        }

        else if ((_Folio == null || _Folio == "")) {
            alert("Folio is required!");
            return false;
        }

        else if (TypeCodee == 2 && (_Unit_No == null || _Unit_No == "")) {
            alert("All Condominium Properties require a Unit Number (Record Not Saved)!");
            return false;
        }

        else if (TypeCodee == 1 && (_Plot_No == null || _Plot_No == "")) {

            alert("All Stand Alone Properties require a Plot Number (Record Not Saved)!");
            return false;

        }

        else if (TypeCodee == 3 && (_Plot_No == null || _Plot_No == "")) {
            alert("All Unlisted Land Types/ Properties require a Plot Number (Record Not Saved)!");
            return false;

        }

        var _type = 0;
        if (window._requestType == "beginedit") {
            _type = 2;
        }
        else if (window._requestType == "add") {
            _type = 1;
        }


        $.ajax({
            url: "SaveMailoHoldProperty",
            type: "Get",
            dataType: "json",
            data: {
                "Location_id": Location,
                "Title_Reference": _Title_Reference.trim(),
                "Verified": _NoParentTitle,
                "LandTypeCode": LandTypeCodee,
                "Volume": _Volume,
                "Folio": _Folio,
                "TypeCode": TypeCodee,
                "Unit_No": _Unit_No,
                "Block_No": _Block_No,
                "Flat_N0": _Flat_N0,
                "Plan_No": _Plan_No,
                "Plot_No": _Plot_No,
                "DistrictID": DistrictIDD,
                "County_ID": County,
                "Subcounty_ID": Subcounty,
                "Project_Code": ProjectCode,
                "AreaOfUnit": _AreaOfUnit,
                "UnitFactor": _UnitFactor,
                "ProprietorAddress": _ProprietorAddress,
                "BoardMinuteRelease": _BoardMinuteRelease,
                "PropertySoldorTransferred": _PropertySoldorTransferred,
                "ActualPlotSize": _PlotSize,
                "PlotSize_ID": PlotSizeUnits,
                "ValueOfProperty": _ValueOfProperty,
                "Valuer": _Valuer,
                "DateOfValuation": DateOfValuationn,
                "GeneralRemarks": _GeneralRemarks,
                "FloorAreaLeased": _FloorAreaLeased,
                "Longitude": _Longitude,
                "Latitude": _Latitude,
                "_type": _type,

            },

            success: function (data) {
                //alert(data);
                var scan = $('#UploadInput').ejUploadbox("instance");
                scan.upload();
                successAction();
                var grid = $("#Grid").ejGrid("instance");
                grid.refreshContent();
                grid.endEdit();
            }
        });
    }
</script>

<script>

    function open(args) {

        var objDialog = $("#Grid").data("ejGrid");
        var $dialogWrapper = objDialog.element.find("#" + objDialog._id + "_dialogEdit_wrapper");
        $dialogWrapper.css("top", "10px");
        $dialogWrapper.css("left", "10px");
    }

    function successAction(args) {
        //alert(window._Event);
        if (window._Event == "beginedit" || window._Event == "add") { }
        else {

            $("#Grid").ejWaitingPopup("hide");

            var proddesc = $('#ClubID').val();
            var str = "Result" + " Saved Successfully!!!";

            $("#SuccessSave").html('<p style="font-family: cursive;color: green;">' + str /*+ '</p></br><button id="button1" style="margin-left: 50%;size: large; showRoundedCorner: true; cssClass:customCss1">OK</button>'*/);

            $("#btn1").ejButton({
                cssClass: "e-primary",
                size: "large",
                showRoundedCorner: true,
                contentType: "textandimage",
                prefixIcon: "e-icon e-handup",
                visible: false,
                style: "float:right",
                click: function (args) {
                    $("#SuccessSave").ejDialog("close");
                }
            });

            $("#button1").ejButton({
                cssClass: "e-success",
                size: "medium",
                showRoundedCorner: false,
                contentType: "textandimage",
                prefixIcon: "e-icon e-handup",

                click: function (args) {
                    $("#SuccessSave").ejDialog("close");
                }
            });
            $("#SuccessSave").ejDialog({ enableModal: true });
            $("#SuccessSave").ejDialog("open");
        }
    }
</script>


@*File Upload Scripts*@
<script>
    function fileselect(e) {
        for (var i = 0; i < e.files.length; i++) {
            $("#uploaded").empty();
            var msg = "<li style='display:block;color:green'>" + e.files[i].name + "</span><span style='display:block;font-size: 10px;color:blue'>" + (e.files[i].size / 1024).toFixed(2) + "KB</span></li>"
            $("#uploaded").append(msg);
        }
    }
    function Filebegin(args) {
        window.TitRef = $('#Title_Reference').val();
        window.Volume = $('#Volume').val();
        window.Folio = $('#Folio').val();
        var uploadcontent = document.getElementById("uploaded");
        //Check whether the title reference is not null
        if ((window.TitRef == null || window.TitRef == "") &&
            (window.Volume == null || window.Volume == "") &&
            (window.Folio == null  || window.Folio == "")) {
            alert("Please fill in the Title Reference,Volume and Folio!");
            uploadcontent.textContent = "";
            return false;
        }
        if ((window.TitRef == null || window.TitRef == "")) {
            alert("Please fill in the Title Reference!");
            uploadcontent.textContent = ""
            return false;
        }
        if (window.Volume == null || window.Volume == "") {
            alert("Please fill in the Volume!");
            uploadcontent.textContent = ""
            return false;
        }
        if (window.Folio == null || window.Folio == "") {
            alert("Please fill in the Folio in the form!");
            uploadcontent.textContent = ""
            return false;
        }
        args.model.saveUrl = "SaveScan?Title_Reference=" + window.TitRef + "&&Volume=" + window.Volume + "&&Folio=" + window.Folio;
    }
    function FileComplete(args) {
        alert("Uploaded");
    }
    function LoadEvidence() {
        //debugger;
        $("#EvidenceGrid").ejGrid({
            dataSource: ej.DataManager({
            url: "@Url.Action("DataSourceScans", "PropertyTitles")?Title_Reference=" + titref + "&&Volume=" + vol + "&&Folio=" + fol, adaptor: "UrlAdaptor"
            }),
            allowGrouping: false,
            isResponsive: true,
            enableAltRow: true,
            allowTextWrap: true,
            textWrapSettings: { wrapMode: "both" },
            allowResizeToFit: true,
            showStackedHeader: true,
            enableResponsiveRow: true,

            toolbarSettings: {
                showToolbar: true,
            },
            editSettings: {
                allowEditing: true,
                allowAdding: true,
                allowDeleting: true,
                rowPosition: "bottom"
            },
            allowPaging: true,
            editSettings: { allowEditing: false, allowAdding: false, allowDeleting: false, editMode: 'batch' },
            allowResizeToFit: true,
            columns: [
                { field: "DocumentCode", visible: false, allowEditing: false, headerText: "ID", width: 80, isPrimaryKey: true },
                { field: "TitleReferenceNo", visible: true, headerText: "Title Reference", width: 100 },
                { field: "Volume", visible: true, headerText: "Volume", width: 80/*, isPrimaryKey: true*/ },
                { field: "Folio", visible: true, headerText: "Folio", width: 80/*, isPrimaryKey: true*/ },
                { field: "DocumentName", visible: true, headerText: "Document", width: 80/*, isPrimaryKey: true*/ },
                { field: 'UploadDate', type: "date", headerText: 'Uploaded Date', editType: "datepicker", format: "{0:dd/MM/yyyy}", editParams: { buttonText: "Now" }, width: 150 },
                {
                    headerText: "Manage Record",
                    commands: [
                        { type: "Download", buttonOptions: { text: "Download", width: "100", click: "onDownloadClick" } },
                        { type: "Delete", buttonOptions: { text: "Delete", width: "100", click: "onDeleteClick" } }
                    ],
                    textAlign: ej.TextAlign.Center,
                    width: 150
                }
            ],
        });
    }
    function onDownloadClick(args) {
        var grid = $("#EvidenceGrid").ejGrid("instance");
        $("#hfDocumentCode").val(grid.getSelectedRecords()[0].DocumentCode);
            $("#btnDownload")[0].click();
        }
    function onDeleteClick(args) {
             var grid = $("#EvidenceGrid").ejGrid("instance");
            $.ajax({
                url: "@Url.Action("EvidenceDeletFile", "PropertyTitles")",
                type: "Get",
                dataType: "json",
                data: {
                    "DocumentCode": grid.getSelectedRecords()[0].DocumentCode
                },
                success: function (data) {
                    grid.refreshContent(true);
                }
            });
        }
</script>

<style>
    .e-grid .e-groupdroparea, /*GroupDropArea */
    .e-grid .e-groupdroparea:hover, /*GroupDropArea Hover*/
    .e-grid .e-cloneproperties, /*Column header clone during dragging header*/
    .e-grid .e-groupheadercell:hover, /*HeaderCell in GroupDropArea*/
    .e-grid td.e-active, /*During Row Selected*/
    /*For pager items and their hover*/
    .e-pager .e-currentitem,
    .e-pager .e-currentitem:hover,
    .e-pager .e-link:hover,
    .e-pager .e-icon:hover {
        background-color: #ea1b8d;
    }

    .e-grid .e-gridheader /*For line that separates the grid header and content*/ {
        border-bottom-color: /*#ea1b8d*/ green;
    }

    .e-grid tr.e-hover /*For row hover*/ {
        background-color: #e66aae;
        color: #FFFFFF;
    }

    .e-grid .e-alt_row /*For Alternate row color*/ {
        background-color: #E5E4E2; /*#99CFE3;*/
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
        border-bottom: 1px solid #c8c8c8;
        border-left: 1px solid #c8c8c8;
    }
</style>
<style>
    .panel-default > .panel-heading {
        background-color: #451bb1 /*#3e1111*/;
        color: white;
        /*background-color:silver;*/
        /*color: white;*/
    }
</style>

<style type="text/css" class="cssStyles">
    .control {
        margin-left: 30px;
    }

    .ctrllabel {
        padding-top: 15px;
    }

    .control {
        margin-left: 20px;
    }

    .frame {
        height: 250px;
        width: 1000px;
    }

    .frame1 {
        height: 240px;
        width: 900px;
    }

    .txt {
        display: block;
        margin-bottom: 12px;
    }
</style>

<style>
    .e-grid .e-dialog .gridform .e-rowcell {
        padding: .5em;
    }

    .custom.e-js .e-header {
        background: #5f0c98;
    }

    .custom.e-js .e-content {
        background: #ddd;
    }

    .custom .e-rbn-button.e-btn.e-select {
        background: #f5f5f5;
        color: #333;
    }

    .tabstyle {
        background: #F9F9F9;
        border-radius: 10px;
        border: 1px solid #99CFE3;
        display: block;
    }

    .longcolumns {
        width: 600px !important;
        margin: 0 auto !important;
        position: relative !important;
        border-right: 5px #666 outset !important;
        border-left: 5px #666 outset !important;
    }
</style>

@(Html.EJ().Dialog("ErrorList").Title("Exception Thrown").Width("350").ShowOnInit(false))
@(Html.EJ().Dialog("SuccessSave").Title("Action Successful").ShowFooter(true).FooterTemplateId("sample").Width("350").ShowOnInit(false))
@(Html.EJ().Dialog("SuccessDelete").Title("Record Deleted").ShowFooter(true).FooterTemplateId("sample").Width("350").ShowOnInit(false))
@(Html.EJ().Dialog("CancelDial").Title("Record Not Saved").ShowFooter(true).FooterTemplateId("cancelfooter").Width("350").ShowOnInit(false))
@(Html.EJ().Dialog("ArchiveDial").Title("Record Archived").ShowFooter(true).FooterTemplateId("cancelfooter").Width("350").ShowOnInit(false))


@using (Html.BeginForm("EvidenceDownloadFile", "PropertyTitles", FormMethod.Post))
{
    <input type="hidden" id="hfDocumentCode" name="DocumentCode" />
    <input type="submit" id="btnDownload" value="Download" style="display:none" />
}
