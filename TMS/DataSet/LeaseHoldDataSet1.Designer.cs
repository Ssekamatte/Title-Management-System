//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace TMSRep.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LeaseHoldDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LeaseHoldDataSet : global::System.Data.DataSet {
        
        private LeaseHoldTitlesDataTable tableLeaseHoldTitles;
        
        private SumLeaseTypesDataTable tableSumLeaseTypes;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public LeaseHoldDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected LeaseHoldDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["LeaseHoldTitles"] != null)) {
                    base.Tables.Add(new LeaseHoldTitlesDataTable(ds.Tables["LeaseHoldTitles"]));
                }
                if ((ds.Tables["SumLeaseTypes"] != null)) {
                    base.Tables.Add(new SumLeaseTypesDataTable(ds.Tables["SumLeaseTypes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LeaseHoldTitlesDataTable LeaseHoldTitles {
            get {
                return this.tableLeaseHoldTitles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SumLeaseTypesDataTable SumLeaseTypes {
            get {
                return this.tableSumLeaseTypes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LeaseHoldDataSet cln = ((LeaseHoldDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["LeaseHoldTitles"] != null)) {
                    base.Tables.Add(new LeaseHoldTitlesDataTable(ds.Tables["LeaseHoldTitles"]));
                }
                if ((ds.Tables["SumLeaseTypes"] != null)) {
                    base.Tables.Add(new SumLeaseTypesDataTable(ds.Tables["SumLeaseTypes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableLeaseHoldTitles = ((LeaseHoldTitlesDataTable)(base.Tables["LeaseHoldTitles"]));
            if ((initTable == true)) {
                if ((this.tableLeaseHoldTitles != null)) {
                    this.tableLeaseHoldTitles.InitVars();
                }
            }
            this.tableSumLeaseTypes = ((SumLeaseTypesDataTable)(base.Tables["SumLeaseTypes"]));
            if ((initTable == true)) {
                if ((this.tableSumLeaseTypes != null)) {
                    this.tableSumLeaseTypes.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LeaseHoldDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LeaseHoldDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableLeaseHoldTitles = new LeaseHoldTitlesDataTable();
            base.Tables.Add(this.tableLeaseHoldTitles);
            this.tableSumLeaseTypes = new SumLeaseTypesDataTable();
            base.Tables.Add(this.tableSumLeaseTypes);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeLeaseHoldTitles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeSumLeaseTypes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LeaseHoldDataSet ds = new LeaseHoldDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void LeaseHoldTitlesRowChangeEventHandler(object sender, LeaseHoldTitlesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void SumLeaseTypesRowChangeEventHandler(object sender, SumLeaseTypesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LeaseHoldTitlesDataTable : global::System.Data.TypedTableBase<LeaseHoldTitlesRow> {
            
            private global::System.Data.DataColumn columnVolume;
            
            private global::System.Data.DataColumn columnFolio;
            
            private global::System.Data.DataColumn columnTypeCode;
            
            private global::System.Data.DataColumn columnTypeDescription;
            
            private global::System.Data.DataColumn columnLandTypeCode;
            
            private global::System.Data.DataColumn columnLandTypeDescription;
            
            private global::System.Data.DataColumn columnProject_Code;
            
            private global::System.Data.DataColumn columnProjectDescription;
            
            private global::System.Data.DataColumn columnLocation_id;
            
            private global::System.Data.DataColumn columnLocationDescription;
            
            private global::System.Data.DataColumn columnDistrictID;
            
            private global::System.Data.DataColumn columnDistrictDescription;
            
            private global::System.Data.DataColumn columnCounty_ID;
            
            private global::System.Data.DataColumn columnCountyDescription;
            
            private global::System.Data.DataColumn columnSubcounty_ID;
            
            private global::System.Data.DataColumn columnSubCountyDescription;
            
            private global::System.Data.DataColumn columnPlotSize_ID;
            
            private global::System.Data.DataColumn columnPlotSizeDescription;
            
            private global::System.Data.DataColumn columnVolumeAlias;
            
            private global::System.Data.DataColumn columnFolioAlias;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnProject_id;
            
            private global::System.Data.DataColumn columnVerified;
            
            private global::System.Data.DataColumn columnTitle_Reference;
            
            private global::System.Data.DataColumn columnUnit_No;
            
            private global::System.Data.DataColumn columnPlan_No;
            
            private global::System.Data.DataColumn columnBlock_No;
            
            private global::System.Data.DataColumn columnFlat_N0;
            
            private global::System.Data.DataColumn columnRegion_num;
            
            private global::System.Data.DataColumn columnParish_ID;
            
            private global::System.Data.DataColumn columnTown_Village;
            
            private global::System.Data.DataColumn columnStreet;
            
            private global::System.Data.DataColumn columnPlot_No;
            
            private global::System.Data.DataColumn columnLease_Start_Date;
            
            private global::System.Data.DataColumn columnLease_End_Date;
            
            private global::System.Data.DataColumn columnGround_Rent;
            
            private global::System.Data.DataColumn columnRates;
            
            private global::System.Data.DataColumn columnOfferNo;
            
            private global::System.Data.DataColumn columnPurchaser_Name;
            
            private global::System.Data.DataColumn columnNationality;
            
            private global::System.Data.DataColumn columnPurchasers_Address;
            
            private global::System.Data.DataColumn columnPurchasers_TelNo;
            
            private global::System.Data.DataColumn columnPurchasers_Email;
            
            private global::System.Data.DataColumn columnPurchaserEmployer;
            
            private global::System.Data.DataColumn columnOfferDate;
            
            private global::System.Data.DataColumn columnOffer_Value;
            
            private global::System.Data.DataColumn columnOfferExpiryDate;
            
            private global::System.Data.DataColumn columnOfferPaymentDate;
            
            private global::System.Data.DataColumn columnOfferPaidUP;
            
            private global::System.Data.DataColumn columnTitleTransferred;
            
            private global::System.Data.DataColumn columnLeaseOfferedBy;
            
            private global::System.Data.DataColumn columnTransferDate;
            
            private global::System.Data.DataColumn columnPurchaserRemark;
            
            private global::System.Data.DataColumn columnNewDataAudit;
            
            private global::System.Data.DataColumn columnEditDataAudit;
            
            private global::System.Data.DataColumn columnPropertyStaatus;
            
            private global::System.Data.DataColumn columnAreaOfUnit;
            
            private global::System.Data.DataColumn columnFloorAreaLeased;
            
            private global::System.Data.DataColumn columnUnitFactor;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnRegDate;
            
            private global::System.Data.DataColumn columnInstrumentNo;
            
            private global::System.Data.DataColumn columnProprietorName;
            
            private global::System.Data.DataColumn columnProprietorAddress;
            
            private global::System.Data.DataColumn columnFathersName;
            
            private global::System.Data.DataColumn columnClan;
            
            private global::System.Data.DataColumn columnRegistrar;
            
            private global::System.Data.DataColumn columnBoardMinuteRelease;
            
            private global::System.Data.DataColumn columnDirectors;
            
            private global::System.Data.DataColumn columnAdded_By;
            
            private global::System.Data.DataColumn columnAdded_Date;
            
            private global::System.Data.DataColumn columnEdited_By;
            
            private global::System.Data.DataColumn columnEdited_Date;
            
            private global::System.Data.DataColumn columnValueOfProperty;
            
            private global::System.Data.DataColumn columnLeaseYears_ID;
            
            private global::System.Data.DataColumn columnActualPlotSize;
            
            private global::System.Data.DataColumn columnSourceOfLease;
            
            private global::System.Data.DataColumn columnGroundRentNarrative;
            
            private global::System.Data.DataColumn columnGroundRentDueDate;
            
            private global::System.Data.DataColumn columnGeneralRemarks;
            
            private global::System.Data.DataColumn columnValuer;
            
            private global::System.Data.DataColumn columnDateOfValuation;
            
            private global::System.Data.DataColumn columnPropertySoldorTransferred;
            
            private global::System.Data.DataColumn columnProject_CodeParent;
            
            private global::System.Data.DataColumn columnVolumeParent;
            
            private global::System.Data.DataColumn columnFolioParent;
            
            private global::System.Data.DataColumn columnUnlockTitle;
            
            private global::System.Data.DataColumn columnTitleMovementStatusID;
            
            private global::System.Data.DataColumn columnTitleSentBackToEntrant;
            
            private global::System.Data.DataColumn columnFinalSubmission;
            
            private global::System.Data.DataColumn columnRejectionComment;
            
            private global::System.Data.DataColumn columnUnlockComment;
            
            private global::System.Data.DataColumn columnUnlockedBy;
            
            private global::System.Data.DataColumn columnUnlockDate;
            
            private global::System.Data.DataColumn columnHasParentTitleCaseDesc;
            
            private global::System.Data.DataColumn columnPropertySoldorTransferredCaseDesc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LeaseHoldTitlesDataTable() {
                this.TableName = "LeaseHoldTitles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LeaseHoldTitlesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected LeaseHoldTitlesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VolumeColumn {
                get {
                    return this.columnVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FolioColumn {
                get {
                    return this.columnFolio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TypeCodeColumn {
                get {
                    return this.columnTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TypeDescriptionColumn {
                get {
                    return this.columnTypeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandTypeCodeColumn {
                get {
                    return this.columnLandTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandTypeDescriptionColumn {
                get {
                    return this.columnLandTypeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Project_CodeColumn {
                get {
                    return this.columnProject_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProjectDescriptionColumn {
                get {
                    return this.columnProjectDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Location_idColumn {
                get {
                    return this.columnLocation_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LocationDescriptionColumn {
                get {
                    return this.columnLocationDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DistrictIDColumn {
                get {
                    return this.columnDistrictID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DistrictDescriptionColumn {
                get {
                    return this.columnDistrictDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn County_IDColumn {
                get {
                    return this.columnCounty_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CountyDescriptionColumn {
                get {
                    return this.columnCountyDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Subcounty_IDColumn {
                get {
                    return this.columnSubcounty_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubCountyDescriptionColumn {
                get {
                    return this.columnSubCountyDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PlotSize_IDColumn {
                get {
                    return this.columnPlotSize_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PlotSizeDescriptionColumn {
                get {
                    return this.columnPlotSizeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VolumeAliasColumn {
                get {
                    return this.columnVolumeAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FolioAliasColumn {
                get {
                    return this.columnFolioAlias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Project_idColumn {
                get {
                    return this.columnProject_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VerifiedColumn {
                get {
                    return this.columnVerified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Title_ReferenceColumn {
                get {
                    return this.columnTitle_Reference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Unit_NoColumn {
                get {
                    return this.columnUnit_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Plan_NoColumn {
                get {
                    return this.columnPlan_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Block_NoColumn {
                get {
                    return this.columnBlock_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Flat_N0Column {
                get {
                    return this.columnFlat_N0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Region_numColumn {
                get {
                    return this.columnRegion_num;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Parish_IDColumn {
                get {
                    return this.columnParish_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Town_VillageColumn {
                get {
                    return this.columnTown_Village;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StreetColumn {
                get {
                    return this.columnStreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Plot_NoColumn {
                get {
                    return this.columnPlot_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Lease_Start_DateColumn {
                get {
                    return this.columnLease_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Lease_End_DateColumn {
                get {
                    return this.columnLease_End_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Ground_RentColumn {
                get {
                    return this.columnGround_Rent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RatesColumn {
                get {
                    return this.columnRates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OfferNoColumn {
                get {
                    return this.columnOfferNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Purchaser_NameColumn {
                get {
                    return this.columnPurchaser_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NationalityColumn {
                get {
                    return this.columnNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Purchasers_AddressColumn {
                get {
                    return this.columnPurchasers_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Purchasers_TelNoColumn {
                get {
                    return this.columnPurchasers_TelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Purchasers_EmailColumn {
                get {
                    return this.columnPurchasers_Email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PurchaserEmployerColumn {
                get {
                    return this.columnPurchaserEmployer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OfferDateColumn {
                get {
                    return this.columnOfferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Offer_ValueColumn {
                get {
                    return this.columnOffer_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OfferExpiryDateColumn {
                get {
                    return this.columnOfferExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OfferPaymentDateColumn {
                get {
                    return this.columnOfferPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OfferPaidUPColumn {
                get {
                    return this.columnOfferPaidUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TitleTransferredColumn {
                get {
                    return this.columnTitleTransferred;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LeaseOfferedByColumn {
                get {
                    return this.columnLeaseOfferedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TransferDateColumn {
                get {
                    return this.columnTransferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PurchaserRemarkColumn {
                get {
                    return this.columnPurchaserRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NewDataAuditColumn {
                get {
                    return this.columnNewDataAudit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EditDataAuditColumn {
                get {
                    return this.columnEditDataAudit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PropertyStaatusColumn {
                get {
                    return this.columnPropertyStaatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AreaOfUnitColumn {
                get {
                    return this.columnAreaOfUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FloorAreaLeasedColumn {
                get {
                    return this.columnFloorAreaLeased;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitFactorColumn {
                get {
                    return this.columnUnitFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RegDateColumn {
                get {
                    return this.columnRegDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InstrumentNoColumn {
                get {
                    return this.columnInstrumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProprietorNameColumn {
                get {
                    return this.columnProprietorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProprietorAddressColumn {
                get {
                    return this.columnProprietorAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FathersNameColumn {
                get {
                    return this.columnFathersName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ClanColumn {
                get {
                    return this.columnClan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RegistrarColumn {
                get {
                    return this.columnRegistrar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BoardMinuteReleaseColumn {
                get {
                    return this.columnBoardMinuteRelease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DirectorsColumn {
                get {
                    return this.columnDirectors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Added_ByColumn {
                get {
                    return this.columnAdded_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Added_DateColumn {
                get {
                    return this.columnAdded_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Edited_ByColumn {
                get {
                    return this.columnEdited_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Edited_DateColumn {
                get {
                    return this.columnEdited_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ValueOfPropertyColumn {
                get {
                    return this.columnValueOfProperty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LeaseYears_IDColumn {
                get {
                    return this.columnLeaseYears_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ActualPlotSizeColumn {
                get {
                    return this.columnActualPlotSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SourceOfLeaseColumn {
                get {
                    return this.columnSourceOfLease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GroundRentNarrativeColumn {
                get {
                    return this.columnGroundRentNarrative;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GroundRentDueDateColumn {
                get {
                    return this.columnGroundRentDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GeneralRemarksColumn {
                get {
                    return this.columnGeneralRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ValuerColumn {
                get {
                    return this.columnValuer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateOfValuationColumn {
                get {
                    return this.columnDateOfValuation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PropertySoldorTransferredColumn {
                get {
                    return this.columnPropertySoldorTransferred;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Project_CodeParentColumn {
                get {
                    return this.columnProject_CodeParent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VolumeParentColumn {
                get {
                    return this.columnVolumeParent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FolioParentColumn {
                get {
                    return this.columnFolioParent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnlockTitleColumn {
                get {
                    return this.columnUnlockTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TitleMovementStatusIDColumn {
                get {
                    return this.columnTitleMovementStatusID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TitleSentBackToEntrantColumn {
                get {
                    return this.columnTitleSentBackToEntrant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FinalSubmissionColumn {
                get {
                    return this.columnFinalSubmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RejectionCommentColumn {
                get {
                    return this.columnRejectionComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnlockCommentColumn {
                get {
                    return this.columnUnlockComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnlockedByColumn {
                get {
                    return this.columnUnlockedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnlockDateColumn {
                get {
                    return this.columnUnlockDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HasParentTitleCaseDescColumn {
                get {
                    return this.columnHasParentTitleCaseDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PropertySoldorTransferredCaseDescColumn {
                get {
                    return this.columnPropertySoldorTransferredCaseDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LeaseHoldTitlesRow this[int index] {
                get {
                    return ((LeaseHoldTitlesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LeaseHoldTitlesRowChangeEventHandler LeaseHoldTitlesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LeaseHoldTitlesRowChangeEventHandler LeaseHoldTitlesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LeaseHoldTitlesRowChangeEventHandler LeaseHoldTitlesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event LeaseHoldTitlesRowChangeEventHandler LeaseHoldTitlesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddLeaseHoldTitlesRow(LeaseHoldTitlesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LeaseHoldTitlesRow AddLeaseHoldTitlesRow(
                        string Volume, 
                        int Folio, 
                        int TypeCode, 
                        string TypeDescription, 
                        int LandTypeCode, 
                        string LandTypeDescription, 
                        int Project_Code, 
                        string ProjectDescription, 
                        int Location_id, 
                        string LocationDescription, 
                        int DistrictID, 
                        string DistrictDescription, 
                        int County_ID, 
                        string CountyDescription, 
                        int Subcounty_ID, 
                        string SubCountyDescription, 
                        int PlotSize_ID, 
                        string PlotSizeDescription, 
                        string VolumeAlias, 
                        int FolioAlias, 
                        int ID, 
                        int Project_id, 
                        bool Verified, 
                        string Title_Reference, 
                        string Unit_No, 
                        string Plan_No, 
                        string Block_No, 
                        string Flat_N0, 
                        int Region_num, 
                        int Parish_ID, 
                        string Town_Village, 
                        string Street, 
                        string Plot_No, 
                        System.DateTime Lease_Start_Date, 
                        System.DateTime Lease_End_Date, 
                        int Ground_Rent, 
                        int Rates, 
                        string OfferNo, 
                        string Purchaser_Name, 
                        int Nationality, 
                        string Purchasers_Address, 
                        string Purchasers_TelNo, 
                        string Purchasers_Email, 
                        string PurchaserEmployer, 
                        System.DateTime OfferDate, 
                        string Offer_Value, 
                        System.DateTime OfferExpiryDate, 
                        System.DateTime OfferPaymentDate, 
                        bool OfferPaidUP, 
                        bool TitleTransferred, 
                        string LeaseOfferedBy, 
                        System.DateTime TransferDate, 
                        string PurchaserRemark, 
                        string NewDataAudit, 
                        string EditDataAudit, 
                        int PropertyStaatus, 
                        string AreaOfUnit, 
                        string FloorAreaLeased, 
                        string UnitFactor, 
                        System.DateTime Date, 
                        System.DateTime RegDate, 
                        string InstrumentNo, 
                        string ProprietorName, 
                        string ProprietorAddress, 
                        string FathersName, 
                        string Clan, 
                        string Registrar, 
                        string BoardMinuteRelease, 
                        string Directors, 
                        string Added_By, 
                        System.DateTime Added_Date, 
                        string Edited_By, 
                        System.DateTime Edited_Date, 
                        string ValueOfProperty, 
                        int LeaseYears_ID, 
                        string ActualPlotSize, 
                        string SourceOfLease, 
                        string GroundRentNarrative, 
                        string GroundRentDueDate, 
                        string GeneralRemarks, 
                        string Valuer, 
                        System.DateTime DateOfValuation, 
                        bool PropertySoldorTransferred, 
                        int Project_CodeParent, 
                        string VolumeParent, 
                        int FolioParent, 
                        bool UnlockTitle, 
                        int TitleMovementStatusID, 
                        bool TitleSentBackToEntrant, 
                        bool FinalSubmission, 
                        string RejectionComment, 
                        string UnlockComment, 
                        string UnlockedBy, 
                        System.DateTime UnlockDate, 
                        string HasParentTitleCaseDesc, 
                        string PropertySoldorTransferredCaseDesc) {
                LeaseHoldTitlesRow rowLeaseHoldTitlesRow = ((LeaseHoldTitlesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Volume,
                        Folio,
                        TypeCode,
                        TypeDescription,
                        LandTypeCode,
                        LandTypeDescription,
                        Project_Code,
                        ProjectDescription,
                        Location_id,
                        LocationDescription,
                        DistrictID,
                        DistrictDescription,
                        County_ID,
                        CountyDescription,
                        Subcounty_ID,
                        SubCountyDescription,
                        PlotSize_ID,
                        PlotSizeDescription,
                        VolumeAlias,
                        FolioAlias,
                        ID,
                        Project_id,
                        Verified,
                        Title_Reference,
                        Unit_No,
                        Plan_No,
                        Block_No,
                        Flat_N0,
                        Region_num,
                        Parish_ID,
                        Town_Village,
                        Street,
                        Plot_No,
                        Lease_Start_Date,
                        Lease_End_Date,
                        Ground_Rent,
                        Rates,
                        OfferNo,
                        Purchaser_Name,
                        Nationality,
                        Purchasers_Address,
                        Purchasers_TelNo,
                        Purchasers_Email,
                        PurchaserEmployer,
                        OfferDate,
                        Offer_Value,
                        OfferExpiryDate,
                        OfferPaymentDate,
                        OfferPaidUP,
                        TitleTransferred,
                        LeaseOfferedBy,
                        TransferDate,
                        PurchaserRemark,
                        NewDataAudit,
                        EditDataAudit,
                        PropertyStaatus,
                        AreaOfUnit,
                        FloorAreaLeased,
                        UnitFactor,
                        Date,
                        RegDate,
                        InstrumentNo,
                        ProprietorName,
                        ProprietorAddress,
                        FathersName,
                        Clan,
                        Registrar,
                        BoardMinuteRelease,
                        Directors,
                        Added_By,
                        Added_Date,
                        Edited_By,
                        Edited_Date,
                        ValueOfProperty,
                        LeaseYears_ID,
                        ActualPlotSize,
                        SourceOfLease,
                        GroundRentNarrative,
                        GroundRentDueDate,
                        GeneralRemarks,
                        Valuer,
                        DateOfValuation,
                        PropertySoldorTransferred,
                        Project_CodeParent,
                        VolumeParent,
                        FolioParent,
                        UnlockTitle,
                        TitleMovementStatusID,
                        TitleSentBackToEntrant,
                        FinalSubmission,
                        RejectionComment,
                        UnlockComment,
                        UnlockedBy,
                        UnlockDate,
                        HasParentTitleCaseDesc,
                        PropertySoldorTransferredCaseDesc};
                rowLeaseHoldTitlesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLeaseHoldTitlesRow);
                return rowLeaseHoldTitlesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LeaseHoldTitlesRow FindByLocation_idVolumeAliasFolioAlias(int Location_id, string VolumeAlias, int FolioAlias) {
                return ((LeaseHoldTitlesRow)(this.Rows.Find(new object[] {
                            Location_id,
                            VolumeAlias,
                            FolioAlias})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LeaseHoldTitlesDataTable cln = ((LeaseHoldTitlesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LeaseHoldTitlesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnVolume = base.Columns["Volume"];
                this.columnFolio = base.Columns["Folio"];
                this.columnTypeCode = base.Columns["TypeCode"];
                this.columnTypeDescription = base.Columns["TypeDescription"];
                this.columnLandTypeCode = base.Columns["LandTypeCode"];
                this.columnLandTypeDescription = base.Columns["LandTypeDescription"];
                this.columnProject_Code = base.Columns["Project_Code"];
                this.columnProjectDescription = base.Columns["ProjectDescription"];
                this.columnLocation_id = base.Columns["Location_id"];
                this.columnLocationDescription = base.Columns["LocationDescription"];
                this.columnDistrictID = base.Columns["DistrictID"];
                this.columnDistrictDescription = base.Columns["DistrictDescription"];
                this.columnCounty_ID = base.Columns["County_ID"];
                this.columnCountyDescription = base.Columns["CountyDescription"];
                this.columnSubcounty_ID = base.Columns["Subcounty_ID"];
                this.columnSubCountyDescription = base.Columns["SubCountyDescription"];
                this.columnPlotSize_ID = base.Columns["PlotSize_ID"];
                this.columnPlotSizeDescription = base.Columns["PlotSizeDescription"];
                this.columnVolumeAlias = base.Columns["VolumeAlias"];
                this.columnFolioAlias = base.Columns["FolioAlias"];
                this.columnID = base.Columns["ID"];
                this.columnProject_id = base.Columns["Project_id"];
                this.columnVerified = base.Columns["Verified"];
                this.columnTitle_Reference = base.Columns["Title_Reference"];
                this.columnUnit_No = base.Columns["Unit_No"];
                this.columnPlan_No = base.Columns["Plan_No"];
                this.columnBlock_No = base.Columns["Block_No"];
                this.columnFlat_N0 = base.Columns["Flat_N0"];
                this.columnRegion_num = base.Columns["Region_num"];
                this.columnParish_ID = base.Columns["Parish_ID"];
                this.columnTown_Village = base.Columns["Town_Village"];
                this.columnStreet = base.Columns["Street"];
                this.columnPlot_No = base.Columns["Plot_No"];
                this.columnLease_Start_Date = base.Columns["Lease_Start_Date"];
                this.columnLease_End_Date = base.Columns["Lease_End_Date"];
                this.columnGround_Rent = base.Columns["Ground_Rent"];
                this.columnRates = base.Columns["Rates"];
                this.columnOfferNo = base.Columns["OfferNo"];
                this.columnPurchaser_Name = base.Columns["Purchaser_Name"];
                this.columnNationality = base.Columns["Nationality"];
                this.columnPurchasers_Address = base.Columns["Purchasers_Address"];
                this.columnPurchasers_TelNo = base.Columns["Purchasers_TelNo"];
                this.columnPurchasers_Email = base.Columns["Purchasers_Email"];
                this.columnPurchaserEmployer = base.Columns["PurchaserEmployer"];
                this.columnOfferDate = base.Columns["OfferDate"];
                this.columnOffer_Value = base.Columns["Offer_Value"];
                this.columnOfferExpiryDate = base.Columns["OfferExpiryDate"];
                this.columnOfferPaymentDate = base.Columns["OfferPaymentDate"];
                this.columnOfferPaidUP = base.Columns["OfferPaidUP"];
                this.columnTitleTransferred = base.Columns["TitleTransferred"];
                this.columnLeaseOfferedBy = base.Columns["LeaseOfferedBy"];
                this.columnTransferDate = base.Columns["TransferDate"];
                this.columnPurchaserRemark = base.Columns["PurchaserRemark"];
                this.columnNewDataAudit = base.Columns["NewDataAudit"];
                this.columnEditDataAudit = base.Columns["EditDataAudit"];
                this.columnPropertyStaatus = base.Columns["PropertyStaatus"];
                this.columnAreaOfUnit = base.Columns["AreaOfUnit"];
                this.columnFloorAreaLeased = base.Columns["FloorAreaLeased"];
                this.columnUnitFactor = base.Columns["UnitFactor"];
                this.columnDate = base.Columns["Date"];
                this.columnRegDate = base.Columns["RegDate"];
                this.columnInstrumentNo = base.Columns["InstrumentNo"];
                this.columnProprietorName = base.Columns["ProprietorName"];
                this.columnProprietorAddress = base.Columns["ProprietorAddress"];
                this.columnFathersName = base.Columns["FathersName"];
                this.columnClan = base.Columns["Clan"];
                this.columnRegistrar = base.Columns["Registrar"];
                this.columnBoardMinuteRelease = base.Columns["BoardMinuteRelease"];
                this.columnDirectors = base.Columns["Directors"];
                this.columnAdded_By = base.Columns["Added_By"];
                this.columnAdded_Date = base.Columns["Added_Date"];
                this.columnEdited_By = base.Columns["Edited_By"];
                this.columnEdited_Date = base.Columns["Edited_Date"];
                this.columnValueOfProperty = base.Columns["ValueOfProperty"];
                this.columnLeaseYears_ID = base.Columns["LeaseYears_ID"];
                this.columnActualPlotSize = base.Columns["ActualPlotSize"];
                this.columnSourceOfLease = base.Columns["SourceOfLease"];
                this.columnGroundRentNarrative = base.Columns["GroundRentNarrative"];
                this.columnGroundRentDueDate = base.Columns["GroundRentDueDate"];
                this.columnGeneralRemarks = base.Columns["GeneralRemarks"];
                this.columnValuer = base.Columns["Valuer"];
                this.columnDateOfValuation = base.Columns["DateOfValuation"];
                this.columnPropertySoldorTransferred = base.Columns["PropertySoldorTransferred"];
                this.columnProject_CodeParent = base.Columns["Project_CodeParent"];
                this.columnVolumeParent = base.Columns["VolumeParent"];
                this.columnFolioParent = base.Columns["FolioParent"];
                this.columnUnlockTitle = base.Columns["UnlockTitle"];
                this.columnTitleMovementStatusID = base.Columns["TitleMovementStatusID"];
                this.columnTitleSentBackToEntrant = base.Columns["TitleSentBackToEntrant"];
                this.columnFinalSubmission = base.Columns["FinalSubmission"];
                this.columnRejectionComment = base.Columns["RejectionComment"];
                this.columnUnlockComment = base.Columns["UnlockComment"];
                this.columnUnlockedBy = base.Columns["UnlockedBy"];
                this.columnUnlockDate = base.Columns["UnlockDate"];
                this.columnHasParentTitleCaseDesc = base.Columns["HasParentTitleCaseDesc"];
                this.columnPropertySoldorTransferredCaseDesc = base.Columns["PropertySoldorTransferredCaseDesc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnVolume = new global::System.Data.DataColumn("Volume", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolume);
                this.columnFolio = new global::System.Data.DataColumn("Folio", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolio);
                this.columnTypeCode = new global::System.Data.DataColumn("TypeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeCode);
                this.columnTypeDescription = new global::System.Data.DataColumn("TypeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeDescription);
                this.columnLandTypeCode = new global::System.Data.DataColumn("LandTypeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeCode);
                this.columnLandTypeDescription = new global::System.Data.DataColumn("LandTypeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandTypeDescription);
                this.columnProject_Code = new global::System.Data.DataColumn("Project_Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject_Code);
                this.columnProjectDescription = new global::System.Data.DataColumn("ProjectDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectDescription);
                this.columnLocation_id = new global::System.Data.DataColumn("Location_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_id);
                this.columnLocationDescription = new global::System.Data.DataColumn("LocationDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationDescription);
                this.columnDistrictID = new global::System.Data.DataColumn("DistrictID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictID);
                this.columnDistrictDescription = new global::System.Data.DataColumn("DistrictDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictDescription);
                this.columnCounty_ID = new global::System.Data.DataColumn("County_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounty_ID);
                this.columnCountyDescription = new global::System.Data.DataColumn("CountyDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountyDescription);
                this.columnSubcounty_ID = new global::System.Data.DataColumn("Subcounty_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubcounty_ID);
                this.columnSubCountyDescription = new global::System.Data.DataColumn("SubCountyDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubCountyDescription);
                this.columnPlotSize_ID = new global::System.Data.DataColumn("PlotSize_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlotSize_ID);
                this.columnPlotSizeDescription = new global::System.Data.DataColumn("PlotSizeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlotSizeDescription);
                this.columnVolumeAlias = new global::System.Data.DataColumn("VolumeAlias", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeAlias);
                this.columnFolioAlias = new global::System.Data.DataColumn("FolioAlias", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolioAlias);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnProject_id = new global::System.Data.DataColumn("Project_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject_id);
                this.columnVerified = new global::System.Data.DataColumn("Verified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerified);
                this.columnTitle_Reference = new global::System.Data.DataColumn("Title_Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle_Reference);
                this.columnUnit_No = new global::System.Data.DataColumn("Unit_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_No);
                this.columnPlan_No = new global::System.Data.DataColumn("Plan_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlan_No);
                this.columnBlock_No = new global::System.Data.DataColumn("Block_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlock_No);
                this.columnFlat_N0 = new global::System.Data.DataColumn("Flat_N0", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlat_N0);
                this.columnRegion_num = new global::System.Data.DataColumn("Region_num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion_num);
                this.columnParish_ID = new global::System.Data.DataColumn("Parish_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParish_ID);
                this.columnTown_Village = new global::System.Data.DataColumn("Town_Village", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTown_Village);
                this.columnStreet = new global::System.Data.DataColumn("Street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStreet);
                this.columnPlot_No = new global::System.Data.DataColumn("Plot_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlot_No);
                this.columnLease_Start_Date = new global::System.Data.DataColumn("Lease_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLease_Start_Date);
                this.columnLease_End_Date = new global::System.Data.DataColumn("Lease_End_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLease_End_Date);
                this.columnGround_Rent = new global::System.Data.DataColumn("Ground_Rent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGround_Rent);
                this.columnRates = new global::System.Data.DataColumn("Rates", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRates);
                this.columnOfferNo = new global::System.Data.DataColumn("OfferNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferNo);
                this.columnPurchaser_Name = new global::System.Data.DataColumn("Purchaser_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaser_Name);
                this.columnNationality = new global::System.Data.DataColumn("Nationality", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality);
                this.columnPurchasers_Address = new global::System.Data.DataColumn("Purchasers_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasers_Address);
                this.columnPurchasers_TelNo = new global::System.Data.DataColumn("Purchasers_TelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasers_TelNo);
                this.columnPurchasers_Email = new global::System.Data.DataColumn("Purchasers_Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchasers_Email);
                this.columnPurchaserEmployer = new global::System.Data.DataColumn("PurchaserEmployer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaserEmployer);
                this.columnOfferDate = new global::System.Data.DataColumn("OfferDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferDate);
                this.columnOffer_Value = new global::System.Data.DataColumn("Offer_Value", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffer_Value);
                this.columnOfferExpiryDate = new global::System.Data.DataColumn("OfferExpiryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferExpiryDate);
                this.columnOfferPaymentDate = new global::System.Data.DataColumn("OfferPaymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferPaymentDate);
                this.columnOfferPaidUP = new global::System.Data.DataColumn("OfferPaidUP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOfferPaidUP);
                this.columnTitleTransferred = new global::System.Data.DataColumn("TitleTransferred", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleTransferred);
                this.columnLeaseOfferedBy = new global::System.Data.DataColumn("LeaseOfferedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaseOfferedBy);
                this.columnTransferDate = new global::System.Data.DataColumn("TransferDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferDate);
                this.columnPurchaserRemark = new global::System.Data.DataColumn("PurchaserRemark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaserRemark);
                this.columnNewDataAudit = new global::System.Data.DataColumn("NewDataAudit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewDataAudit);
                this.columnEditDataAudit = new global::System.Data.DataColumn("EditDataAudit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditDataAudit);
                this.columnPropertyStaatus = new global::System.Data.DataColumn("PropertyStaatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertyStaatus);
                this.columnAreaOfUnit = new global::System.Data.DataColumn("AreaOfUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaOfUnit);
                this.columnFloorAreaLeased = new global::System.Data.DataColumn("FloorAreaLeased", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloorAreaLeased);
                this.columnUnitFactor = new global::System.Data.DataColumn("UnitFactor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitFactor);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnRegDate = new global::System.Data.DataColumn("RegDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegDate);
                this.columnInstrumentNo = new global::System.Data.DataColumn("InstrumentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentNo);
                this.columnProprietorName = new global::System.Data.DataColumn("ProprietorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProprietorName);
                this.columnProprietorAddress = new global::System.Data.DataColumn("ProprietorAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProprietorAddress);
                this.columnFathersName = new global::System.Data.DataColumn("FathersName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFathersName);
                this.columnClan = new global::System.Data.DataColumn("Clan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClan);
                this.columnRegistrar = new global::System.Data.DataColumn("Registrar", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrar);
                this.columnBoardMinuteRelease = new global::System.Data.DataColumn("BoardMinuteRelease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoardMinuteRelease);
                this.columnDirectors = new global::System.Data.DataColumn("Directors", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectors);
                this.columnAdded_By = new global::System.Data.DataColumn("Added_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdded_By);
                this.columnAdded_Date = new global::System.Data.DataColumn("Added_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdded_Date);
                this.columnEdited_By = new global::System.Data.DataColumn("Edited_By", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEdited_By);
                this.columnEdited_Date = new global::System.Data.DataColumn("Edited_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEdited_Date);
                this.columnValueOfProperty = new global::System.Data.DataColumn("ValueOfProperty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValueOfProperty);
                this.columnLeaseYears_ID = new global::System.Data.DataColumn("LeaseYears_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeaseYears_ID);
                this.columnActualPlotSize = new global::System.Data.DataColumn("ActualPlotSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualPlotSize);
                this.columnSourceOfLease = new global::System.Data.DataColumn("SourceOfLease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceOfLease);
                this.columnGroundRentNarrative = new global::System.Data.DataColumn("GroundRentNarrative", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroundRentNarrative);
                this.columnGroundRentDueDate = new global::System.Data.DataColumn("GroundRentDueDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroundRentDueDate);
                this.columnGeneralRemarks = new global::System.Data.DataColumn("GeneralRemarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneralRemarks);
                this.columnValuer = new global::System.Data.DataColumn("Valuer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValuer);
                this.columnDateOfValuation = new global::System.Data.DataColumn("DateOfValuation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfValuation);
                this.columnPropertySoldorTransferred = new global::System.Data.DataColumn("PropertySoldorTransferred", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertySoldorTransferred);
                this.columnProject_CodeParent = new global::System.Data.DataColumn("Project_CodeParent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject_CodeParent);
                this.columnVolumeParent = new global::System.Data.DataColumn("VolumeParent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeParent);
                this.columnFolioParent = new global::System.Data.DataColumn("FolioParent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolioParent);
                this.columnUnlockTitle = new global::System.Data.DataColumn("UnlockTitle", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnlockTitle);
                this.columnTitleMovementStatusID = new global::System.Data.DataColumn("TitleMovementStatusID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleMovementStatusID);
                this.columnTitleSentBackToEntrant = new global::System.Data.DataColumn("TitleSentBackToEntrant", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitleSentBackToEntrant);
                this.columnFinalSubmission = new global::System.Data.DataColumn("FinalSubmission", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalSubmission);
                this.columnRejectionComment = new global::System.Data.DataColumn("RejectionComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRejectionComment);
                this.columnUnlockComment = new global::System.Data.DataColumn("UnlockComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnlockComment);
                this.columnUnlockedBy = new global::System.Data.DataColumn("UnlockedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnlockedBy);
                this.columnUnlockDate = new global::System.Data.DataColumn("UnlockDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnlockDate);
                this.columnHasParentTitleCaseDesc = new global::System.Data.DataColumn("HasParentTitleCaseDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHasParentTitleCaseDesc);
                this.columnPropertySoldorTransferredCaseDesc = new global::System.Data.DataColumn("PropertySoldorTransferredCaseDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPropertySoldorTransferredCaseDesc);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLocation_id,
                                this.columnVolumeAlias,
                                this.columnFolioAlias}, true));
                this.columnVolume.ReadOnly = true;
                this.columnVolume.MaxLength = 20;
                this.columnFolio.ReadOnly = true;
                this.columnTypeDescription.MaxLength = 50;
                this.columnLandTypeDescription.MaxLength = 50;
                this.columnProjectDescription.MaxLength = 50;
                this.columnLocation_id.AllowDBNull = false;
                this.columnLocationDescription.MaxLength = 100;
                this.columnDistrictDescription.MaxLength = 50;
                this.columnCountyDescription.MaxLength = 50;
                this.columnSubCountyDescription.MaxLength = 50;
                this.columnPlotSizeDescription.MaxLength = 50;
                this.columnVolumeAlias.AllowDBNull = false;
                this.columnVolumeAlias.MaxLength = 20;
                this.columnFolioAlias.AllowDBNull = false;
                this.columnProject_id.ReadOnly = true;
                this.columnTitle_Reference.MaxLength = 20;
                this.columnUnit_No.MaxLength = 50;
                this.columnPlan_No.MaxLength = 50;
                this.columnBlock_No.MaxLength = 50;
                this.columnFlat_N0.MaxLength = 50;
                this.columnTown_Village.MaxLength = 50;
                this.columnStreet.MaxLength = 50;
                this.columnPlot_No.MaxLength = 225;
                this.columnOfferNo.MaxLength = 50;
                this.columnPurchaser_Name.MaxLength = 75;
                this.columnPurchasers_Address.MaxLength = 100;
                this.columnPurchasers_TelNo.MaxLength = 50;
                this.columnPurchasers_Email.MaxLength = 50;
                this.columnPurchaserEmployer.MaxLength = 50;
                this.columnOffer_Value.MaxLength = 50;
                this.columnLeaseOfferedBy.MaxLength = 255;
                this.columnPurchaserRemark.MaxLength = 75;
                this.columnNewDataAudit.MaxLength = 50;
                this.columnEditDataAudit.MaxLength = 50;
                this.columnAreaOfUnit.MaxLength = 50;
                this.columnFloorAreaLeased.MaxLength = 50;
                this.columnUnitFactor.MaxLength = 50;
                this.columnInstrumentNo.MaxLength = 50;
                this.columnProprietorName.MaxLength = 50;
                this.columnProprietorAddress.MaxLength = 255;
                this.columnFathersName.MaxLength = 50;
                this.columnClan.MaxLength = 50;
                this.columnRegistrar.MaxLength = 50;
                this.columnBoardMinuteRelease.MaxLength = 2147483647;
                this.columnDirectors.MaxLength = 150;
                this.columnAdded_By.MaxLength = 50;
                this.columnEdited_By.MaxLength = 50;
                this.columnValueOfProperty.MaxLength = 50;
                this.columnActualPlotSize.MaxLength = 50;
                this.columnSourceOfLease.MaxLength = 250;
                this.columnGroundRentNarrative.MaxLength = 500;
                this.columnGroundRentDueDate.MaxLength = 520;
                this.columnGeneralRemarks.MaxLength = 2147483647;
                this.columnValuer.MaxLength = 500;
                this.columnVolumeParent.MaxLength = 20;
                this.columnRejectionComment.MaxLength = 2147483647;
                this.columnUnlockComment.MaxLength = 2147483647;
                this.columnUnlockedBy.MaxLength = 50;
                this.columnHasParentTitleCaseDesc.ReadOnly = true;
                this.columnHasParentTitleCaseDesc.MaxLength = 3;
                this.columnPropertySoldorTransferredCaseDesc.ReadOnly = true;
                this.columnPropertySoldorTransferredCaseDesc.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LeaseHoldTitlesRow NewLeaseHoldTitlesRow() {
                return ((LeaseHoldTitlesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LeaseHoldTitlesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LeaseHoldTitlesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LeaseHoldTitlesRowChanged != null)) {
                    this.LeaseHoldTitlesRowChanged(this, new LeaseHoldTitlesRowChangeEvent(((LeaseHoldTitlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LeaseHoldTitlesRowChanging != null)) {
                    this.LeaseHoldTitlesRowChanging(this, new LeaseHoldTitlesRowChangeEvent(((LeaseHoldTitlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LeaseHoldTitlesRowDeleted != null)) {
                    this.LeaseHoldTitlesRowDeleted(this, new LeaseHoldTitlesRowChangeEvent(((LeaseHoldTitlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LeaseHoldTitlesRowDeleting != null)) {
                    this.LeaseHoldTitlesRowDeleting(this, new LeaseHoldTitlesRowChangeEvent(((LeaseHoldTitlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveLeaseHoldTitlesRow(LeaseHoldTitlesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LeaseHoldDataSet ds = new LeaseHoldDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LeaseHoldTitlesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SumLeaseTypesDataTable : global::System.Data.TypedTableBase<SumLeaseTypesRow> {
            
            private global::System.Data.DataColumn columnLandType;
            
            private global::System.Data.DataColumn columnTotalLeaseHoldTitles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SumLeaseTypesDataTable() {
                this.TableName = "SumLeaseTypes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SumLeaseTypesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected SumLeaseTypesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandTypeColumn {
                get {
                    return this.columnLandType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalLeaseHoldTitlesColumn {
                get {
                    return this.columnTotalLeaseHoldTitles;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SumLeaseTypesRow this[int index] {
                get {
                    return ((SumLeaseTypesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SumLeaseTypesRowChangeEventHandler SumLeaseTypesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SumLeaseTypesRowChangeEventHandler SumLeaseTypesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SumLeaseTypesRowChangeEventHandler SumLeaseTypesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event SumLeaseTypesRowChangeEventHandler SumLeaseTypesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddSumLeaseTypesRow(SumLeaseTypesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SumLeaseTypesRow AddSumLeaseTypesRow(string LandType, int TotalLeaseHoldTitles) {
                SumLeaseTypesRow rowSumLeaseTypesRow = ((SumLeaseTypesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LandType,
                        TotalLeaseHoldTitles};
                rowSumLeaseTypesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSumLeaseTypesRow);
                return rowSumLeaseTypesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SumLeaseTypesDataTable cln = ((SumLeaseTypesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SumLeaseTypesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnLandType = base.Columns["LandType"];
                this.columnTotalLeaseHoldTitles = base.Columns["TotalLeaseHoldTitles"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnLandType = new global::System.Data.DataColumn("LandType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandType);
                this.columnTotalLeaseHoldTitles = new global::System.Data.DataColumn("TotalLeaseHoldTitles", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLeaseHoldTitles);
                this.columnLandType.ReadOnly = true;
                this.columnLandType.MaxLength = 10;
                this.columnTotalLeaseHoldTitles.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SumLeaseTypesRow NewSumLeaseTypesRow() {
                return ((SumLeaseTypesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SumLeaseTypesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SumLeaseTypesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SumLeaseTypesRowChanged != null)) {
                    this.SumLeaseTypesRowChanged(this, new SumLeaseTypesRowChangeEvent(((SumLeaseTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SumLeaseTypesRowChanging != null)) {
                    this.SumLeaseTypesRowChanging(this, new SumLeaseTypesRowChangeEvent(((SumLeaseTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SumLeaseTypesRowDeleted != null)) {
                    this.SumLeaseTypesRowDeleted(this, new SumLeaseTypesRowChangeEvent(((SumLeaseTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SumLeaseTypesRowDeleting != null)) {
                    this.SumLeaseTypesRowDeleting(this, new SumLeaseTypesRowChangeEvent(((SumLeaseTypesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveSumLeaseTypesRow(SumLeaseTypesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LeaseHoldDataSet ds = new LeaseHoldDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SumLeaseTypesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LeaseHoldTitlesRow : global::System.Data.DataRow {
            
            private LeaseHoldTitlesDataTable tableLeaseHoldTitles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal LeaseHoldTitlesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLeaseHoldTitles = ((LeaseHoldTitlesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Volume {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.VolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Volume\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.VolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Folio {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.FolioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Folio\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.FolioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TypeCode {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.TypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeCode\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.TypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TypeDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.TypeDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeDescription\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.TypeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int LandTypeCode {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.LandTypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeCode\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.LandTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LandTypeDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.LandTypeDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandTypeDescription\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.LandTypeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Project_Code {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.Project_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Project_Code\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Project_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProjectDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.ProjectDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectDescription\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.ProjectDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Location_id {
                get {
                    return ((int)(this[this.tableLeaseHoldTitles.Location_idColumn]));
                }
                set {
                    this[this.tableLeaseHoldTitles.Location_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LocationDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.LocationDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationDescription\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.LocationDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DistrictID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.DistrictIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictID\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.DistrictIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DistrictDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.DistrictDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictDescription\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.DistrictDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int County_ID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.County_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'County_ID\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.County_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CountyDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.CountyDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountyDescription\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.CountyDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Subcounty_ID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.Subcounty_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subcounty_ID\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Subcounty_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubCountyDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.SubCountyDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubCountyDescription\' in table \'LeaseHoldTitles\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.SubCountyDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PlotSize_ID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.PlotSize_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlotSize_ID\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.PlotSize_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PlotSizeDescription {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.PlotSizeDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlotSizeDescription\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.PlotSizeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VolumeAlias {
                get {
                    return ((string)(this[this.tableLeaseHoldTitles.VolumeAliasColumn]));
                }
                set {
                    this[this.tableLeaseHoldTitles.VolumeAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int FolioAlias {
                get {
                    return ((int)(this[this.tableLeaseHoldTitles.FolioAliasColumn]));
                }
                set {
                    this[this.tableLeaseHoldTitles.FolioAliasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Project_id {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.Project_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Project_id\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Project_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool Verified {
                get {
                    try {
                        return ((bool)(this[this.tableLeaseHoldTitles.VerifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Verified\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.VerifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Title_Reference {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Title_ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title_Reference\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Title_ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Unit_No {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Unit_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_No\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Unit_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Plan_No {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Plan_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plan_No\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Plan_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Block_No {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Block_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Block_No\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Block_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Flat_N0 {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Flat_N0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flat_N0\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Flat_N0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Region_num {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.Region_numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region_num\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Region_numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Parish_ID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.Parish_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Parish_ID\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Parish_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Town_Village {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Town_VillageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Town_Village\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Town_VillageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Street {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.StreetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Street\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.StreetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Plot_No {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Plot_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plot_No\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Plot_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Lease_Start_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.Lease_Start_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lease_Start_Date\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Lease_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Lease_End_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.Lease_End_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Lease_End_Date\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Lease_End_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Ground_Rent {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.Ground_RentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ground_Rent\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Ground_RentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Rates {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.RatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rates\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.RatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OfferNo {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.OfferNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferNo\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.OfferNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Purchaser_Name {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Purchaser_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchaser_Name\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Purchaser_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Nationality {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.NationalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nationality\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.NationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Purchasers_Address {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Purchasers_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchasers_Address\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Purchasers_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Purchasers_TelNo {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Purchasers_TelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchasers_TelNo\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Purchasers_TelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Purchasers_Email {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Purchasers_EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Purchasers_Email\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Purchasers_EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PurchaserEmployer {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.PurchaserEmployerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaserEmployer\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.PurchaserEmployerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime OfferDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.OfferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferDate\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.OfferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Offer_Value {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Offer_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Offer_Value\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Offer_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime OfferExpiryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.OfferExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferExpiryDate\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.OfferExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime OfferPaymentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.OfferPaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferPaymentDate\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.OfferPaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool OfferPaidUP {
                get {
                    try {
                        return ((bool)(this[this.tableLeaseHoldTitles.OfferPaidUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OfferPaidUP\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.OfferPaidUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool TitleTransferred {
                get {
                    try {
                        return ((bool)(this[this.tableLeaseHoldTitles.TitleTransferredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TitleTransferred\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.TitleTransferredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LeaseOfferedBy {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.LeaseOfferedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaseOfferedBy\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.LeaseOfferedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime TransferDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.TransferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferDate\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.TransferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PurchaserRemark {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.PurchaserRemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaserRemark\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.PurchaserRemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NewDataAudit {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.NewDataAuditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NewDataAudit\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.NewDataAuditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EditDataAudit {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.EditDataAuditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditDataAudit\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.EditDataAuditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int PropertyStaatus {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.PropertyStaatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertyStaatus\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.PropertyStaatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string AreaOfUnit {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.AreaOfUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AreaOfUnit\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.AreaOfUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FloorAreaLeased {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.FloorAreaLeasedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FloorAreaLeased\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.FloorAreaLeasedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnitFactor {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.UnitFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitFactor\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.UnitFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RegDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.RegDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegDate\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.RegDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InstrumentNo {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.InstrumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstrumentNo\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.InstrumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProprietorName {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.ProprietorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProprietorName\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.ProprietorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProprietorAddress {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.ProprietorAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProprietorAddress\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.ProprietorAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FathersName {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.FathersNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FathersName\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.FathersNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Clan {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.ClanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clan\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.ClanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Registrar {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.RegistrarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Registrar\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.RegistrarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BoardMinuteRelease {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.BoardMinuteReleaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BoardMinuteRelease\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.BoardMinuteReleaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Directors {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.DirectorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Directors\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.DirectorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Added_By {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Added_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Added_By\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Added_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Added_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.Added_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Added_Date\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Added_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Edited_By {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.Edited_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Edited_By\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Edited_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime Edited_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.Edited_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Edited_Date\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Edited_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ValueOfProperty {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.ValueOfPropertyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValueOfProperty\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.ValueOfPropertyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int LeaseYears_ID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.LeaseYears_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeaseYears_ID\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.LeaseYears_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ActualPlotSize {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.ActualPlotSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualPlotSize\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.ActualPlotSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SourceOfLease {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.SourceOfLeaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceOfLease\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.SourceOfLeaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GroundRentNarrative {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.GroundRentNarrativeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroundRentNarrative\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.GroundRentNarrativeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GroundRentDueDate {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.GroundRentDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroundRentDueDate\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.GroundRentDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GeneralRemarks {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.GeneralRemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeneralRemarks\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.GeneralRemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Valuer {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.ValuerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Valuer\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.ValuerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DateOfValuation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.DateOfValuationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfValuation\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.DateOfValuationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool PropertySoldorTransferred {
                get {
                    try {
                        return ((bool)(this[this.tableLeaseHoldTitles.PropertySoldorTransferredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertySoldorTransferred\' in table \'LeaseHoldTitles\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.PropertySoldorTransferredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Project_CodeParent {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.Project_CodeParentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Project_CodeParent\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.Project_CodeParentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string VolumeParent {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.VolumeParentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolumeParent\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.VolumeParentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int FolioParent {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.FolioParentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FolioParent\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.FolioParentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool UnlockTitle {
                get {
                    try {
                        return ((bool)(this[this.tableLeaseHoldTitles.UnlockTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnlockTitle\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.UnlockTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TitleMovementStatusID {
                get {
                    try {
                        return ((int)(this[this.tableLeaseHoldTitles.TitleMovementStatusIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TitleMovementStatusID\' in table \'LeaseHoldTitles\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.TitleMovementStatusIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool TitleSentBackToEntrant {
                get {
                    try {
                        return ((bool)(this[this.tableLeaseHoldTitles.TitleSentBackToEntrantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TitleSentBackToEntrant\' in table \'LeaseHoldTitles\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.TitleSentBackToEntrantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool FinalSubmission {
                get {
                    try {
                        return ((bool)(this[this.tableLeaseHoldTitles.FinalSubmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalSubmission\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.FinalSubmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RejectionComment {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.RejectionCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RejectionComment\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.RejectionCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnlockComment {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.UnlockCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnlockComment\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.UnlockCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnlockedBy {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.UnlockedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnlockedBy\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.UnlockedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime UnlockDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeaseHoldTitles.UnlockDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnlockDate\' in table \'LeaseHoldTitles\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.UnlockDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HasParentTitleCaseDesc {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.HasParentTitleCaseDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HasParentTitleCaseDesc\' in table \'LeaseHoldTitles\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.HasParentTitleCaseDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PropertySoldorTransferredCaseDesc {
                get {
                    try {
                        return ((string)(this[this.tableLeaseHoldTitles.PropertySoldorTransferredCaseDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PropertySoldorTransferredCaseDesc\' in table \'LeaseHoldTitle" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeaseHoldTitles.PropertySoldorTransferredCaseDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVolumeNull() {
                return this.IsNull(this.tableLeaseHoldTitles.VolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVolumeNull() {
                this[this.tableLeaseHoldTitles.VolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFolioNull() {
                return this.IsNull(this.tableLeaseHoldTitles.FolioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFolioNull() {
                this[this.tableLeaseHoldTitles.FolioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTypeCodeNull() {
                return this.IsNull(this.tableLeaseHoldTitles.TypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTypeCodeNull() {
                this[this.tableLeaseHoldTitles.TypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTypeDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.TypeDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTypeDescriptionNull() {
                this[this.tableLeaseHoldTitles.TypeDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandTypeCodeNull() {
                return this.IsNull(this.tableLeaseHoldTitles.LandTypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandTypeCodeNull() {
                this[this.tableLeaseHoldTitles.LandTypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandTypeDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.LandTypeDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandTypeDescriptionNull() {
                this[this.tableLeaseHoldTitles.LandTypeDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProject_CodeNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Project_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProject_CodeNull() {
                this[this.tableLeaseHoldTitles.Project_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProjectDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.ProjectDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProjectDescriptionNull() {
                this[this.tableLeaseHoldTitles.ProjectDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLocationDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.LocationDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLocationDescriptionNull() {
                this[this.tableLeaseHoldTitles.LocationDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDistrictIDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.DistrictIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDistrictIDNull() {
                this[this.tableLeaseHoldTitles.DistrictIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDistrictDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.DistrictDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDistrictDescriptionNull() {
                this[this.tableLeaseHoldTitles.DistrictDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCounty_IDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.County_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCounty_IDNull() {
                this[this.tableLeaseHoldTitles.County_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCountyDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.CountyDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCountyDescriptionNull() {
                this[this.tableLeaseHoldTitles.CountyDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubcounty_IDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Subcounty_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubcounty_IDNull() {
                this[this.tableLeaseHoldTitles.Subcounty_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubCountyDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.SubCountyDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubCountyDescriptionNull() {
                this[this.tableLeaseHoldTitles.SubCountyDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPlotSize_IDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.PlotSize_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPlotSize_IDNull() {
                this[this.tableLeaseHoldTitles.PlotSize_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPlotSizeDescriptionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.PlotSizeDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPlotSizeDescriptionNull() {
                this[this.tableLeaseHoldTitles.PlotSizeDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDNull() {
                this[this.tableLeaseHoldTitles.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProject_idNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Project_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProject_idNull() {
                this[this.tableLeaseHoldTitles.Project_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVerifiedNull() {
                return this.IsNull(this.tableLeaseHoldTitles.VerifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVerifiedNull() {
                this[this.tableLeaseHoldTitles.VerifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTitle_ReferenceNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Title_ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTitle_ReferenceNull() {
                this[this.tableLeaseHoldTitles.Title_ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnit_NoNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Unit_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnit_NoNull() {
                this[this.tableLeaseHoldTitles.Unit_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPlan_NoNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Plan_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPlan_NoNull() {
                this[this.tableLeaseHoldTitles.Plan_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBlock_NoNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Block_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBlock_NoNull() {
                this[this.tableLeaseHoldTitles.Block_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFlat_N0Null() {
                return this.IsNull(this.tableLeaseHoldTitles.Flat_N0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFlat_N0Null() {
                this[this.tableLeaseHoldTitles.Flat_N0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRegion_numNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Region_numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRegion_numNull() {
                this[this.tableLeaseHoldTitles.Region_numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsParish_IDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Parish_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetParish_IDNull() {
                this[this.tableLeaseHoldTitles.Parish_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTown_VillageNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Town_VillageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTown_VillageNull() {
                this[this.tableLeaseHoldTitles.Town_VillageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStreetNull() {
                return this.IsNull(this.tableLeaseHoldTitles.StreetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStreetNull() {
                this[this.tableLeaseHoldTitles.StreetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPlot_NoNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Plot_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPlot_NoNull() {
                this[this.tableLeaseHoldTitles.Plot_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLease_Start_DateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Lease_Start_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLease_Start_DateNull() {
                this[this.tableLeaseHoldTitles.Lease_Start_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLease_End_DateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Lease_End_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLease_End_DateNull() {
                this[this.tableLeaseHoldTitles.Lease_End_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGround_RentNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Ground_RentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGround_RentNull() {
                this[this.tableLeaseHoldTitles.Ground_RentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRatesNull() {
                return this.IsNull(this.tableLeaseHoldTitles.RatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRatesNull() {
                this[this.tableLeaseHoldTitles.RatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOfferNoNull() {
                return this.IsNull(this.tableLeaseHoldTitles.OfferNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOfferNoNull() {
                this[this.tableLeaseHoldTitles.OfferNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurchaser_NameNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Purchaser_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurchaser_NameNull() {
                this[this.tableLeaseHoldTitles.Purchaser_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNationalityNull() {
                return this.IsNull(this.tableLeaseHoldTitles.NationalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNationalityNull() {
                this[this.tableLeaseHoldTitles.NationalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurchasers_AddressNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Purchasers_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurchasers_AddressNull() {
                this[this.tableLeaseHoldTitles.Purchasers_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurchasers_TelNoNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Purchasers_TelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurchasers_TelNoNull() {
                this[this.tableLeaseHoldTitles.Purchasers_TelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurchasers_EmailNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Purchasers_EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurchasers_EmailNull() {
                this[this.tableLeaseHoldTitles.Purchasers_EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurchaserEmployerNull() {
                return this.IsNull(this.tableLeaseHoldTitles.PurchaserEmployerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurchaserEmployerNull() {
                this[this.tableLeaseHoldTitles.PurchaserEmployerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOfferDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.OfferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOfferDateNull() {
                this[this.tableLeaseHoldTitles.OfferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOffer_ValueNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Offer_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOffer_ValueNull() {
                this[this.tableLeaseHoldTitles.Offer_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOfferExpiryDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.OfferExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOfferExpiryDateNull() {
                this[this.tableLeaseHoldTitles.OfferExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOfferPaymentDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.OfferPaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOfferPaymentDateNull() {
                this[this.tableLeaseHoldTitles.OfferPaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOfferPaidUPNull() {
                return this.IsNull(this.tableLeaseHoldTitles.OfferPaidUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOfferPaidUPNull() {
                this[this.tableLeaseHoldTitles.OfferPaidUPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTitleTransferredNull() {
                return this.IsNull(this.tableLeaseHoldTitles.TitleTransferredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTitleTransferredNull() {
                this[this.tableLeaseHoldTitles.TitleTransferredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLeaseOfferedByNull() {
                return this.IsNull(this.tableLeaseHoldTitles.LeaseOfferedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLeaseOfferedByNull() {
                this[this.tableLeaseHoldTitles.LeaseOfferedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTransferDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.TransferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTransferDateNull() {
                this[this.tableLeaseHoldTitles.TransferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPurchaserRemarkNull() {
                return this.IsNull(this.tableLeaseHoldTitles.PurchaserRemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPurchaserRemarkNull() {
                this[this.tableLeaseHoldTitles.PurchaserRemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNewDataAuditNull() {
                return this.IsNull(this.tableLeaseHoldTitles.NewDataAuditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNewDataAuditNull() {
                this[this.tableLeaseHoldTitles.NewDataAuditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEditDataAuditNull() {
                return this.IsNull(this.tableLeaseHoldTitles.EditDataAuditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEditDataAuditNull() {
                this[this.tableLeaseHoldTitles.EditDataAuditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPropertyStaatusNull() {
                return this.IsNull(this.tableLeaseHoldTitles.PropertyStaatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPropertyStaatusNull() {
                this[this.tableLeaseHoldTitles.PropertyStaatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAreaOfUnitNull() {
                return this.IsNull(this.tableLeaseHoldTitles.AreaOfUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAreaOfUnitNull() {
                this[this.tableLeaseHoldTitles.AreaOfUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFloorAreaLeasedNull() {
                return this.IsNull(this.tableLeaseHoldTitles.FloorAreaLeasedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFloorAreaLeasedNull() {
                this[this.tableLeaseHoldTitles.FloorAreaLeasedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitFactorNull() {
                return this.IsNull(this.tableLeaseHoldTitles.UnitFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitFactorNull() {
                this[this.tableLeaseHoldTitles.UnitFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateNull() {
                this[this.tableLeaseHoldTitles.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRegDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.RegDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRegDateNull() {
                this[this.tableLeaseHoldTitles.RegDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInstrumentNoNull() {
                return this.IsNull(this.tableLeaseHoldTitles.InstrumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInstrumentNoNull() {
                this[this.tableLeaseHoldTitles.InstrumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProprietorNameNull() {
                return this.IsNull(this.tableLeaseHoldTitles.ProprietorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProprietorNameNull() {
                this[this.tableLeaseHoldTitles.ProprietorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProprietorAddressNull() {
                return this.IsNull(this.tableLeaseHoldTitles.ProprietorAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProprietorAddressNull() {
                this[this.tableLeaseHoldTitles.ProprietorAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFathersNameNull() {
                return this.IsNull(this.tableLeaseHoldTitles.FathersNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFathersNameNull() {
                this[this.tableLeaseHoldTitles.FathersNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsClanNull() {
                return this.IsNull(this.tableLeaseHoldTitles.ClanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetClanNull() {
                this[this.tableLeaseHoldTitles.ClanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRegistrarNull() {
                return this.IsNull(this.tableLeaseHoldTitles.RegistrarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRegistrarNull() {
                this[this.tableLeaseHoldTitles.RegistrarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBoardMinuteReleaseNull() {
                return this.IsNull(this.tableLeaseHoldTitles.BoardMinuteReleaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBoardMinuteReleaseNull() {
                this[this.tableLeaseHoldTitles.BoardMinuteReleaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDirectorsNull() {
                return this.IsNull(this.tableLeaseHoldTitles.DirectorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDirectorsNull() {
                this[this.tableLeaseHoldTitles.DirectorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAdded_ByNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Added_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAdded_ByNull() {
                this[this.tableLeaseHoldTitles.Added_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAdded_DateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Added_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAdded_DateNull() {
                this[this.tableLeaseHoldTitles.Added_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEdited_ByNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Edited_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEdited_ByNull() {
                this[this.tableLeaseHoldTitles.Edited_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEdited_DateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Edited_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEdited_DateNull() {
                this[this.tableLeaseHoldTitles.Edited_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsValueOfPropertyNull() {
                return this.IsNull(this.tableLeaseHoldTitles.ValueOfPropertyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetValueOfPropertyNull() {
                this[this.tableLeaseHoldTitles.ValueOfPropertyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLeaseYears_IDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.LeaseYears_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLeaseYears_IDNull() {
                this[this.tableLeaseHoldTitles.LeaseYears_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsActualPlotSizeNull() {
                return this.IsNull(this.tableLeaseHoldTitles.ActualPlotSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetActualPlotSizeNull() {
                this[this.tableLeaseHoldTitles.ActualPlotSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSourceOfLeaseNull() {
                return this.IsNull(this.tableLeaseHoldTitles.SourceOfLeaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSourceOfLeaseNull() {
                this[this.tableLeaseHoldTitles.SourceOfLeaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGroundRentNarrativeNull() {
                return this.IsNull(this.tableLeaseHoldTitles.GroundRentNarrativeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGroundRentNarrativeNull() {
                this[this.tableLeaseHoldTitles.GroundRentNarrativeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGroundRentDueDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.GroundRentDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGroundRentDueDateNull() {
                this[this.tableLeaseHoldTitles.GroundRentDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGeneralRemarksNull() {
                return this.IsNull(this.tableLeaseHoldTitles.GeneralRemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGeneralRemarksNull() {
                this[this.tableLeaseHoldTitles.GeneralRemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsValuerNull() {
                return this.IsNull(this.tableLeaseHoldTitles.ValuerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetValuerNull() {
                this[this.tableLeaseHoldTitles.ValuerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateOfValuationNull() {
                return this.IsNull(this.tableLeaseHoldTitles.DateOfValuationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateOfValuationNull() {
                this[this.tableLeaseHoldTitles.DateOfValuationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPropertySoldorTransferredNull() {
                return this.IsNull(this.tableLeaseHoldTitles.PropertySoldorTransferredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPropertySoldorTransferredNull() {
                this[this.tableLeaseHoldTitles.PropertySoldorTransferredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProject_CodeParentNull() {
                return this.IsNull(this.tableLeaseHoldTitles.Project_CodeParentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProject_CodeParentNull() {
                this[this.tableLeaseHoldTitles.Project_CodeParentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVolumeParentNull() {
                return this.IsNull(this.tableLeaseHoldTitles.VolumeParentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVolumeParentNull() {
                this[this.tableLeaseHoldTitles.VolumeParentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFolioParentNull() {
                return this.IsNull(this.tableLeaseHoldTitles.FolioParentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFolioParentNull() {
                this[this.tableLeaseHoldTitles.FolioParentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnlockTitleNull() {
                return this.IsNull(this.tableLeaseHoldTitles.UnlockTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnlockTitleNull() {
                this[this.tableLeaseHoldTitles.UnlockTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTitleMovementStatusIDNull() {
                return this.IsNull(this.tableLeaseHoldTitles.TitleMovementStatusIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTitleMovementStatusIDNull() {
                this[this.tableLeaseHoldTitles.TitleMovementStatusIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTitleSentBackToEntrantNull() {
                return this.IsNull(this.tableLeaseHoldTitles.TitleSentBackToEntrantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTitleSentBackToEntrantNull() {
                this[this.tableLeaseHoldTitles.TitleSentBackToEntrantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFinalSubmissionNull() {
                return this.IsNull(this.tableLeaseHoldTitles.FinalSubmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFinalSubmissionNull() {
                this[this.tableLeaseHoldTitles.FinalSubmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRejectionCommentNull() {
                return this.IsNull(this.tableLeaseHoldTitles.RejectionCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRejectionCommentNull() {
                this[this.tableLeaseHoldTitles.RejectionCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnlockCommentNull() {
                return this.IsNull(this.tableLeaseHoldTitles.UnlockCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnlockCommentNull() {
                this[this.tableLeaseHoldTitles.UnlockCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnlockedByNull() {
                return this.IsNull(this.tableLeaseHoldTitles.UnlockedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnlockedByNull() {
                this[this.tableLeaseHoldTitles.UnlockedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnlockDateNull() {
                return this.IsNull(this.tableLeaseHoldTitles.UnlockDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnlockDateNull() {
                this[this.tableLeaseHoldTitles.UnlockDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHasParentTitleCaseDescNull() {
                return this.IsNull(this.tableLeaseHoldTitles.HasParentTitleCaseDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHasParentTitleCaseDescNull() {
                this[this.tableLeaseHoldTitles.HasParentTitleCaseDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPropertySoldorTransferredCaseDescNull() {
                return this.IsNull(this.tableLeaseHoldTitles.PropertySoldorTransferredCaseDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPropertySoldorTransferredCaseDescNull() {
                this[this.tableLeaseHoldTitles.PropertySoldorTransferredCaseDescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SumLeaseTypesRow : global::System.Data.DataRow {
            
            private SumLeaseTypesDataTable tableSumLeaseTypes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SumLeaseTypesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSumLeaseTypes = ((SumLeaseTypesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LandType {
                get {
                    try {
                        return ((string)(this[this.tableSumLeaseTypes.LandTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LandType\' in table \'SumLeaseTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSumLeaseTypes.LandTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int TotalLeaseHoldTitles {
                get {
                    try {
                        return ((int)(this[this.tableSumLeaseTypes.TotalLeaseHoldTitlesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLeaseHoldTitles\' in table \'SumLeaseTypes\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSumLeaseTypes.TotalLeaseHoldTitlesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandTypeNull() {
                return this.IsNull(this.tableSumLeaseTypes.LandTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandTypeNull() {
                this[this.tableSumLeaseTypes.LandTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalLeaseHoldTitlesNull() {
                return this.IsNull(this.tableSumLeaseTypes.TotalLeaseHoldTitlesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalLeaseHoldTitlesNull() {
                this[this.tableSumLeaseTypes.TotalLeaseHoldTitlesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class LeaseHoldTitlesRowChangeEvent : global::System.EventArgs {
            
            private LeaseHoldTitlesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LeaseHoldTitlesRowChangeEvent(LeaseHoldTitlesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public LeaseHoldTitlesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class SumLeaseTypesRowChangeEvent : global::System.EventArgs {
            
            private SumLeaseTypesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SumLeaseTypesRowChangeEvent(SumLeaseTypesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public SumLeaseTypesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace TMSRep.DataSet.LeaseHoldDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LeaseHoldTitlesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public LeaseHoldTitlesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LeaseHoldTitles";
            tableMapping.ColumnMappings.Add("Volume", "Volume");
            tableMapping.ColumnMappings.Add("Folio", "Folio");
            tableMapping.ColumnMappings.Add("TypeCode", "TypeCode");
            tableMapping.ColumnMappings.Add("TypeDescription", "TypeDescription");
            tableMapping.ColumnMappings.Add("LandTypeCode", "LandTypeCode");
            tableMapping.ColumnMappings.Add("LandTypeDescription", "LandTypeDescription");
            tableMapping.ColumnMappings.Add("Project_Code", "Project_Code");
            tableMapping.ColumnMappings.Add("ProjectDescription", "ProjectDescription");
            tableMapping.ColumnMappings.Add("Location_id", "Location_id");
            tableMapping.ColumnMappings.Add("LocationDescription", "LocationDescription");
            tableMapping.ColumnMappings.Add("DistrictID", "DistrictID");
            tableMapping.ColumnMappings.Add("DistrictDescription", "DistrictDescription");
            tableMapping.ColumnMappings.Add("County_ID", "County_ID");
            tableMapping.ColumnMappings.Add("CountyDescription", "CountyDescription");
            tableMapping.ColumnMappings.Add("Subcounty_ID", "Subcounty_ID");
            tableMapping.ColumnMappings.Add("SubCountyDescription", "SubCountyDescription");
            tableMapping.ColumnMappings.Add("PlotSize_ID", "PlotSize_ID");
            tableMapping.ColumnMappings.Add("PlotSizeDescription", "PlotSizeDescription");
            tableMapping.ColumnMappings.Add("VolumeAlias", "VolumeAlias");
            tableMapping.ColumnMappings.Add("FolioAlias", "FolioAlias");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Project_id", "Project_id");
            tableMapping.ColumnMappings.Add("Verified", "Verified");
            tableMapping.ColumnMappings.Add("Title_Reference", "Title_Reference");
            tableMapping.ColumnMappings.Add("Unit_No", "Unit_No");
            tableMapping.ColumnMappings.Add("Plan_No", "Plan_No");
            tableMapping.ColumnMappings.Add("Block_No", "Block_No");
            tableMapping.ColumnMappings.Add("Flat_N0", "Flat_N0");
            tableMapping.ColumnMappings.Add("Region_num", "Region_num");
            tableMapping.ColumnMappings.Add("Parish_ID", "Parish_ID");
            tableMapping.ColumnMappings.Add("Town_Village", "Town_Village");
            tableMapping.ColumnMappings.Add("Street", "Street");
            tableMapping.ColumnMappings.Add("Plot_No", "Plot_No");
            tableMapping.ColumnMappings.Add("Lease_Start_Date", "Lease_Start_Date");
            tableMapping.ColumnMappings.Add("Lease_End_Date", "Lease_End_Date");
            tableMapping.ColumnMappings.Add("Ground_Rent", "Ground_Rent");
            tableMapping.ColumnMappings.Add("Rates", "Rates");
            tableMapping.ColumnMappings.Add("OfferNo", "OfferNo");
            tableMapping.ColumnMappings.Add("Purchaser_Name", "Purchaser_Name");
            tableMapping.ColumnMappings.Add("Nationality", "Nationality");
            tableMapping.ColumnMappings.Add("Purchasers_Address", "Purchasers_Address");
            tableMapping.ColumnMappings.Add("Purchasers_TelNo", "Purchasers_TelNo");
            tableMapping.ColumnMappings.Add("Purchasers_Email", "Purchasers_Email");
            tableMapping.ColumnMappings.Add("PurchaserEmployer", "PurchaserEmployer");
            tableMapping.ColumnMappings.Add("OfferDate", "OfferDate");
            tableMapping.ColumnMappings.Add("Offer_Value", "Offer_Value");
            tableMapping.ColumnMappings.Add("OfferExpiryDate", "OfferExpiryDate");
            tableMapping.ColumnMappings.Add("OfferPaymentDate", "OfferPaymentDate");
            tableMapping.ColumnMappings.Add("OfferPaidUP", "OfferPaidUP");
            tableMapping.ColumnMappings.Add("TitleTransferred", "TitleTransferred");
            tableMapping.ColumnMappings.Add("LeaseOfferedBy", "LeaseOfferedBy");
            tableMapping.ColumnMappings.Add("TransferDate", "TransferDate");
            tableMapping.ColumnMappings.Add("PurchaserRemark", "PurchaserRemark");
            tableMapping.ColumnMappings.Add("NewDataAudit", "NewDataAudit");
            tableMapping.ColumnMappings.Add("EditDataAudit", "EditDataAudit");
            tableMapping.ColumnMappings.Add("PropertyStaatus", "PropertyStaatus");
            tableMapping.ColumnMappings.Add("AreaOfUnit", "AreaOfUnit");
            tableMapping.ColumnMappings.Add("FloorAreaLeased", "FloorAreaLeased");
            tableMapping.ColumnMappings.Add("UnitFactor", "UnitFactor");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("RegDate", "RegDate");
            tableMapping.ColumnMappings.Add("InstrumentNo", "InstrumentNo");
            tableMapping.ColumnMappings.Add("ProprietorName", "ProprietorName");
            tableMapping.ColumnMappings.Add("ProprietorAddress", "ProprietorAddress");
            tableMapping.ColumnMappings.Add("FathersName", "FathersName");
            tableMapping.ColumnMappings.Add("Clan", "Clan");
            tableMapping.ColumnMappings.Add("Registrar", "Registrar");
            tableMapping.ColumnMappings.Add("BoardMinuteRelease", "BoardMinuteRelease");
            tableMapping.ColumnMappings.Add("Directors", "Directors");
            tableMapping.ColumnMappings.Add("Added_By", "Added_By");
            tableMapping.ColumnMappings.Add("Added_Date", "Added_Date");
            tableMapping.ColumnMappings.Add("Edited_By", "Edited_By");
            tableMapping.ColumnMappings.Add("Edited_Date", "Edited_Date");
            tableMapping.ColumnMappings.Add("ValueOfProperty", "ValueOfProperty");
            tableMapping.ColumnMappings.Add("LeaseYears_ID", "LeaseYears_ID");
            tableMapping.ColumnMappings.Add("ActualPlotSize", "ActualPlotSize");
            tableMapping.ColumnMappings.Add("SourceOfLease", "SourceOfLease");
            tableMapping.ColumnMappings.Add("GroundRentNarrative", "GroundRentNarrative");
            tableMapping.ColumnMappings.Add("GroundRentDueDate", "GroundRentDueDate");
            tableMapping.ColumnMappings.Add("GeneralRemarks", "GeneralRemarks");
            tableMapping.ColumnMappings.Add("Valuer", "Valuer");
            tableMapping.ColumnMappings.Add("DateOfValuation", "DateOfValuation");
            tableMapping.ColumnMappings.Add("PropertySoldorTransferred", "PropertySoldorTransferred");
            tableMapping.ColumnMappings.Add("Project_CodeParent", "Project_CodeParent");
            tableMapping.ColumnMappings.Add("VolumeParent", "VolumeParent");
            tableMapping.ColumnMappings.Add("FolioParent", "FolioParent");
            tableMapping.ColumnMappings.Add("UnlockTitle", "UnlockTitle");
            tableMapping.ColumnMappings.Add("TitleMovementStatusID", "TitleMovementStatusID");
            tableMapping.ColumnMappings.Add("TitleSentBackToEntrant", "TitleSentBackToEntrant");
            tableMapping.ColumnMappings.Add("FinalSubmission", "FinalSubmission");
            tableMapping.ColumnMappings.Add("RejectionComment", "RejectionComment");
            tableMapping.ColumnMappings.Add("UnlockComment", "UnlockComment");
            tableMapping.ColumnMappings.Add("UnlockedBy", "UnlockedBy");
            tableMapping.ColumnMappings.Add("UnlockDate", "UnlockDate");
            tableMapping.ColumnMappings.Add("HasParentTitleCaseDesc", "HasParentTitleCaseDesc");
            tableMapping.ColumnMappings.Add("PropertySoldorTransferredCaseDesc", "PropertySoldorTransferredCaseDesc");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["NHCC_TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spReport_Split_New_LeaseHoldPropertyTitlesGetAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lease_End_Date01", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lease_End_Date02", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_desc", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typedesc", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LeaseHoldDataSet.LeaseHoldTitlesDataTable dataTable, global::System.Nullable<global::System.DateTime> Lease_End_Date01, global::System.Nullable<global::System.DateTime> Lease_End_Date02, string location_desc, string typedesc) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Lease_End_Date01.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Lease_End_Date01.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Lease_End_Date02.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Lease_End_Date02.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((location_desc == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(location_desc));
            }
            if ((typedesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(typedesc));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LeaseHoldDataSet.LeaseHoldTitlesDataTable GetData(global::System.Nullable<global::System.DateTime> Lease_End_Date01, global::System.Nullable<global::System.DateTime> Lease_End_Date02, string location_desc, string typedesc) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Lease_End_Date01.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Lease_End_Date01.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Lease_End_Date02.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Lease_End_Date02.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((location_desc == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(location_desc));
            }
            if ((typedesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(typedesc));
            }
            LeaseHoldDataSet.LeaseHoldTitlesDataTable dataTable = new LeaseHoldDataSet.LeaseHoldTitlesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SumLeaseTypesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public SumLeaseTypesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SumLeaseTypes";
            tableMapping.ColumnMappings.Add("LandType", "LandType");
            tableMapping.ColumnMappings.Add("TotalLeaseHoldTitles", "TotalLeaseHoldTitles");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["NHCC_TMSConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spReport_Split_NewLandType_LeaseHoldPropertyTitlesGetAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lease_End_Date01", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lease_End_Date02", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@location_desc", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@typedesc", global::System.Data.SqlDbType.VarChar, 2000, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(LeaseHoldDataSet.SumLeaseTypesDataTable dataTable, global::System.Nullable<global::System.DateTime> Lease_End_Date01, global::System.Nullable<global::System.DateTime> Lease_End_Date02, string location_desc, string typedesc) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Lease_End_Date01.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Lease_End_Date01.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Lease_End_Date02.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Lease_End_Date02.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((location_desc == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(location_desc));
            }
            if ((typedesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(typedesc));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual LeaseHoldDataSet.SumLeaseTypesDataTable GetData(global::System.Nullable<global::System.DateTime> Lease_End_Date01, global::System.Nullable<global::System.DateTime> Lease_End_Date02, string location_desc, string typedesc) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Lease_End_Date01.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Lease_End_Date01.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Lease_End_Date02.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Lease_End_Date02.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((location_desc == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(location_desc));
            }
            if ((typedesc == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(typedesc));
            }
            LeaseHoldDataSet.SumLeaseTypesDataTable dataTable = new LeaseHoldDataSet.SumLeaseTypesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(LeaseHoldDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(LeaseHoldDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(LeaseHoldDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(LeaseHoldDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591